
DS18B20.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800200  00001804  00001898  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001804  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000003d  0080023a  0080023a  000018d2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000018d2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001930  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  00001970  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000be4  00000000  00000000  00001a98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000004b4  00000000  00000000  0000267c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c2d  00000000  00000000  00002b30  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000268  00000000  00000000  00003760  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003f5  00000000  00000000  000039c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000096e  00000000  00000000  00003dbd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  0000472b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	ee c0       	rjmp	.+476    	; 0x1de <__ctors_end>
       2:	00 00       	nop
       4:	0c c1       	rjmp	.+536    	; 0x21e <__bad_interrupt>
       6:	00 00       	nop
       8:	0a c1       	rjmp	.+532    	; 0x21e <__bad_interrupt>
       a:	00 00       	nop
       c:	08 c1       	rjmp	.+528    	; 0x21e <__bad_interrupt>
       e:	00 00       	nop
      10:	06 c1       	rjmp	.+524    	; 0x21e <__bad_interrupt>
      12:	00 00       	nop
      14:	04 c1       	rjmp	.+520    	; 0x21e <__bad_interrupt>
      16:	00 00       	nop
      18:	02 c1       	rjmp	.+516    	; 0x21e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	00 c1       	rjmp	.+512    	; 0x21e <__bad_interrupt>
      1e:	00 00       	nop
      20:	fe c0       	rjmp	.+508    	; 0x21e <__bad_interrupt>
      22:	00 00       	nop
      24:	fc c0       	rjmp	.+504    	; 0x21e <__bad_interrupt>
      26:	00 00       	nop
      28:	fa c0       	rjmp	.+500    	; 0x21e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	f8 c0       	rjmp	.+496    	; 0x21e <__bad_interrupt>
      2e:	00 00       	nop
      30:	f6 c0       	rjmp	.+492    	; 0x21e <__bad_interrupt>
      32:	00 00       	nop
      34:	f4 c0       	rjmp	.+488    	; 0x21e <__bad_interrupt>
      36:	00 00       	nop
      38:	f2 c0       	rjmp	.+484    	; 0x21e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	f0 c0       	rjmp	.+480    	; 0x21e <__bad_interrupt>
      3e:	00 00       	nop
      40:	ee c0       	rjmp	.+476    	; 0x21e <__bad_interrupt>
      42:	00 00       	nop
      44:	ec c0       	rjmp	.+472    	; 0x21e <__bad_interrupt>
      46:	00 00       	nop
      48:	ea c0       	rjmp	.+468    	; 0x21e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	e8 c0       	rjmp	.+464    	; 0x21e <__bad_interrupt>
      4e:	00 00       	nop
      50:	e6 c0       	rjmp	.+460    	; 0x21e <__bad_interrupt>
      52:	00 00       	nop
      54:	f6 c1       	rjmp	.+1004   	; 0x442 <__vector_21>
      56:	00 00       	nop
      58:	e2 c0       	rjmp	.+452    	; 0x21e <__bad_interrupt>
      5a:	00 00       	nop
      5c:	e0 c0       	rjmp	.+448    	; 0x21e <__bad_interrupt>
      5e:	00 00       	nop
      60:	de c0       	rjmp	.+444    	; 0x21e <__bad_interrupt>
      62:	00 00       	nop
      64:	dc c0       	rjmp	.+440    	; 0x21e <__bad_interrupt>
      66:	00 00       	nop
      68:	da c0       	rjmp	.+436    	; 0x21e <__bad_interrupt>
      6a:	00 00       	nop
      6c:	d8 c0       	rjmp	.+432    	; 0x21e <__bad_interrupt>
      6e:	00 00       	nop
      70:	d6 c0       	rjmp	.+428    	; 0x21e <__bad_interrupt>
      72:	00 00       	nop
      74:	d4 c0       	rjmp	.+424    	; 0x21e <__bad_interrupt>
      76:	00 00       	nop
      78:	d2 c0       	rjmp	.+420    	; 0x21e <__bad_interrupt>
      7a:	00 00       	nop
      7c:	d0 c0       	rjmp	.+416    	; 0x21e <__bad_interrupt>
      7e:	00 00       	nop
      80:	ce c0       	rjmp	.+412    	; 0x21e <__bad_interrupt>
      82:	00 00       	nop
      84:	cc c0       	rjmp	.+408    	; 0x21e <__bad_interrupt>
      86:	00 00       	nop
      88:	ca c0       	rjmp	.+404    	; 0x21e <__bad_interrupt>
      8a:	00 00       	nop
      8c:	c8 c0       	rjmp	.+400    	; 0x21e <__bad_interrupt>
      8e:	00 00       	nop
      90:	c6 c0       	rjmp	.+396    	; 0x21e <__bad_interrupt>
      92:	00 00       	nop
      94:	c4 c0       	rjmp	.+392    	; 0x21e <__bad_interrupt>
      96:	00 00       	nop
      98:	c2 c0       	rjmp	.+388    	; 0x21e <__bad_interrupt>
      9a:	00 00       	nop
      9c:	c0 c0       	rjmp	.+384    	; 0x21e <__bad_interrupt>
      9e:	00 00       	nop
      a0:	be c0       	rjmp	.+380    	; 0x21e <__bad_interrupt>
      a2:	00 00       	nop
      a4:	bc c0       	rjmp	.+376    	; 0x21e <__bad_interrupt>
      a6:	00 00       	nop
      a8:	ba c0       	rjmp	.+372    	; 0x21e <__bad_interrupt>
      aa:	00 00       	nop
      ac:	b8 c0       	rjmp	.+368    	; 0x21e <__bad_interrupt>
      ae:	00 00       	nop
      b0:	b6 c0       	rjmp	.+364    	; 0x21e <__bad_interrupt>
      b2:	00 00       	nop
      b4:	b4 c0       	rjmp	.+360    	; 0x21e <__bad_interrupt>
      b6:	00 00       	nop
      b8:	b2 c0       	rjmp	.+356    	; 0x21e <__bad_interrupt>
      ba:	00 00       	nop
      bc:	b0 c0       	rjmp	.+352    	; 0x21e <__bad_interrupt>
      be:	00 00       	nop
      c0:	ae c0       	rjmp	.+348    	; 0x21e <__bad_interrupt>
      c2:	00 00       	nop
      c4:	ac c0       	rjmp	.+344    	; 0x21e <__bad_interrupt>
      c6:	00 00       	nop
      c8:	aa c0       	rjmp	.+340    	; 0x21e <__bad_interrupt>
      ca:	00 00       	nop
      cc:	a8 c0       	rjmp	.+336    	; 0x21e <__bad_interrupt>
      ce:	00 00       	nop
      d0:	a6 c0       	rjmp	.+332    	; 0x21e <__bad_interrupt>
      d2:	00 00       	nop
      d4:	a4 c0       	rjmp	.+328    	; 0x21e <__bad_interrupt>
      d6:	00 00       	nop
      d8:	a2 c0       	rjmp	.+324    	; 0x21e <__bad_interrupt>
      da:	00 00       	nop
      dc:	a0 c0       	rjmp	.+320    	; 0x21e <__bad_interrupt>
      de:	00 00       	nop
      e0:	9e c0       	rjmp	.+316    	; 0x21e <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	00 40       	sbci	r16, 0x00	; 0
      e6:	7a 10       	cpse	r7, r10
      e8:	f3 5a       	subi	r31, 0xA3	; 163
      ea:	00 a0       	ldd	r0, Z+32	; 0x20
      ec:	72 4e       	sbci	r23, 0xE2	; 226
      ee:	18 09       	sbc	r17, r8
      f0:	00 10       	cpse	r0, r0
      f2:	a5 d4       	rcall	.+2378   	; 0xa3e <__mulsf3_pse+0x2a>
      f4:	e8 00       	.word	0x00e8	; ????
      f6:	00 e8       	ldi	r16, 0x80	; 128
      f8:	76 48       	sbci	r23, 0x86	; 134
      fa:	17 00       	.word	0x0017	; ????
      fc:	00 e4       	ldi	r16, 0x40	; 64
      fe:	0b 54       	subi	r16, 0x4B	; 75
     100:	02 00       	.word	0x0002	; ????
     102:	00 ca       	rjmp	.-3072   	; 0xfffff504 <__eeprom_end+0xff7ef504>
     104:	9a 3b       	cpi	r25, 0xBA	; 186
     106:	00 00       	nop
     108:	00 e1       	ldi	r16, 0x10	; 16
     10a:	f5 05       	cpc	r31, r5
     10c:	00 00       	nop
     10e:	80 96       	adiw	r24, 0x20	; 32
     110:	98 00       	.word	0x0098	; ????
     112:	00 00       	nop
     114:	40 42       	sbci	r20, 0x20	; 32
     116:	0f 00       	.word	0x000f	; ????
     118:	00 00       	nop
     11a:	a0 86       	std	Z+8, r10	; 0x08
     11c:	01 00       	.word	0x0001	; ????
     11e:	00 00       	nop
     120:	10 27       	eor	r17, r16
     122:	00 00       	nop
     124:	00 00       	nop
     126:	e8 03       	fmulsu	r22, r16
     128:	00 00       	nop
     12a:	00 00       	nop
     12c:	64 00       	.word	0x0064	; ????
     12e:	00 00       	nop
     130:	00 00       	nop
     132:	0a 00       	.word	0x000a	; ????
     134:	00 00       	nop
     136:	00 00       	nop
     138:	01 00       	.word	0x0001	; ????
     13a:	00 00       	nop
     13c:	00 00       	nop
     13e:	2c 76       	andi	r18, 0x6C	; 108
     140:	d8 88       	ldd	r13, Y+16	; 0x10
     142:	dc 67       	ori	r29, 0x7C	; 124
     144:	4f 08       	sbc	r4, r15
     146:	23 df       	rcall	.-442    	; 0xffffff8e <__eeprom_end+0xff7eff8e>
     148:	c1 df       	rcall	.-126    	; 0xcc <__SREG__+0x8d>
     14a:	ae 59       	subi	r26, 0x9E	; 158
     14c:	e1 b1       	in	r30, 0x01	; 1
     14e:	b7 96       	adiw	r30, 0x27	; 39
     150:	e5 e3       	ldi	r30, 0x35	; 53
     152:	e4 53       	subi	r30, 0x34	; 52
     154:	c6 3a       	cpi	r28, 0xA6	; 166
     156:	e6 51       	subi	r30, 0x16	; 22
     158:	99 76       	andi	r25, 0x69	; 105
     15a:	96 e8       	ldi	r25, 0x86	; 134
     15c:	e6 c2       	rjmp	.+1484   	; 0x72a <serial_open+0xc2>
     15e:	84 26       	eor	r8, r20
     160:	eb 89       	ldd	r30, Y+19	; 0x13
     162:	8c 9b       	sbis	0x11, 4	; 17
     164:	62 ed       	ldi	r22, 0xD2	; 210
     166:	40 7c       	andi	r20, 0xC0	; 192
     168:	6f fc       	.word	0xfc6f	; ????
     16a:	ef bc       	out	0x2f, r14	; 47
     16c:	9c 9f       	mul	r25, r28
     16e:	40 f2       	brcs	.-112    	; 0x100 <__trampolines_end+0x1c>
     170:	ba a5       	ldd	r27, Y+42	; 0x2a
     172:	6f a5       	ldd	r22, Y+47	; 0x2f
     174:	f4 90       	lpm	r15, Z
     176:	05 5a       	subi	r16, 0xA5	; 165
     178:	2a f7       	brpl	.-54     	; 0x144 <__trampolines_end+0x60>
     17a:	5c 93       	st	X, r21
     17c:	6b 6c       	ori	r22, 0xCB	; 203
     17e:	f9 67       	ori	r31, 0x79	; 121
     180:	6d c1       	rjmp	.+730    	; 0x45c <__vector_21+0x1a>
     182:	1b fc       	.word	0xfc1b	; ????
     184:	e0 e4       	ldi	r30, 0x40	; 64
     186:	0d 47       	sbci	r16, 0x7D	; 125
     188:	fe f5       	brtc	.+126    	; 0x208 <__do_clear_bss>
     18a:	20 e6       	ldi	r18, 0x60	; 96
     18c:	b5 00       	.word	0x00b5	; ????
     18e:	d0 ed       	ldi	r29, 0xD0	; 208
     190:	90 2e       	mov	r9, r16
     192:	03 00       	.word	0x0003	; ????
     194:	94 35       	cpi	r25, 0x54	; 84
     196:	77 05       	cpc	r23, r7
     198:	00 80       	ld	r0, Z
     19a:	84 1e       	adc	r8, r20
     19c:	08 00       	.word	0x0008	; ????
     19e:	00 20       	and	r0, r0
     1a0:	4e 0a       	sbc	r4, r30
     1a2:	00 00       	nop
     1a4:	00 c8       	rjmp	.-4096   	; 0xfffff1a6 <__eeprom_end+0xff7ef1a6>
     1a6:	0c 33       	cpi	r16, 0x3C	; 60
     1a8:	33 33       	cpi	r19, 0x33	; 51
     1aa:	33 0f       	add	r19, r19
     1ac:	98 6e       	ori	r25, 0xE8	; 232
     1ae:	12 83       	std	Z+2, r17	; 0x02
     1b0:	11 41       	sbci	r17, 0x11	; 17
     1b2:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1b4:	21 14       	cp	r2, r1
     1b6:	89 3b       	cpi	r24, 0xB9	; 185
     1b8:	e6 55       	subi	r30, 0x56	; 86
     1ba:	16 cf       	rjmp	.-468    	; 0xffffffe8 <__eeprom_end+0xff7effe8>
     1bc:	fe e6       	ldi	r31, 0x6E	; 110
     1be:	db 18       	sub	r13, r11
     1c0:	d1 84       	ldd	r13, Z+9	; 0x09
     1c2:	4b 38       	cpi	r20, 0x8B	; 139
     1c4:	1b f7       	brvc	.-58     	; 0x18c <__trampolines_end+0xa8>
     1c6:	7c 1d       	adc	r23, r12
     1c8:	90 1d       	adc	r25, r0
     1ca:	a4 bb       	out	0x14, r26	; 20
     1cc:	e4 24       	eor	r14, r4
     1ce:	20 32       	cpi	r18, 0x20	; 32
     1d0:	84 72       	andi	r24, 0x24	; 36
     1d2:	5e 22       	and	r5, r30
     1d4:	81 00       	.word	0x0081	; ????
     1d6:	c9 f1       	breq	.+114    	; 0x24a <x_yield+0x2a>
     1d8:	24 ec       	ldi	r18, 0xC4	; 196
     1da:	a1 e5       	ldi	r26, 0x51	; 81
     1dc:	3d 27       	eor	r19, r29

000001de <__ctors_end>:
     1de:	11 24       	eor	r1, r1
     1e0:	1f be       	out	0x3f, r1	; 63
     1e2:	cf ef       	ldi	r28, 0xFF	; 255
     1e4:	d1 e2       	ldi	r29, 0x21	; 33
     1e6:	de bf       	out	0x3e, r29	; 62
     1e8:	cd bf       	out	0x3d, r28	; 61
     1ea:	00 e0       	ldi	r16, 0x00	; 0
     1ec:	0c bf       	out	0x3c, r16	; 60

000001ee <__do_copy_data>:
     1ee:	12 e0       	ldi	r17, 0x02	; 2
     1f0:	a0 e0       	ldi	r26, 0x00	; 0
     1f2:	b2 e0       	ldi	r27, 0x02	; 2
     1f4:	e4 e0       	ldi	r30, 0x04	; 4
     1f6:	f8 e1       	ldi	r31, 0x18	; 24
     1f8:	00 e0       	ldi	r16, 0x00	; 0
     1fa:	0b bf       	out	0x3b, r16	; 59
     1fc:	02 c0       	rjmp	.+4      	; 0x202 <__do_copy_data+0x14>
     1fe:	07 90       	elpm	r0, Z+
     200:	0d 92       	st	X+, r0
     202:	aa 33       	cpi	r26, 0x3A	; 58
     204:	b1 07       	cpc	r27, r17
     206:	d9 f7       	brne	.-10     	; 0x1fe <__do_copy_data+0x10>

00000208 <__do_clear_bss>:
     208:	22 e0       	ldi	r18, 0x02	; 2
     20a:	aa e3       	ldi	r26, 0x3A	; 58
     20c:	b2 e0       	ldi	r27, 0x02	; 2
     20e:	01 c0       	rjmp	.+2      	; 0x212 <.do_clear_bss_start>

00000210 <.do_clear_bss_loop>:
     210:	1d 92       	st	X+, r1

00000212 <.do_clear_bss_start>:
     212:	a7 37       	cpi	r26, 0x77	; 119
     214:	b2 07       	cpc	r27, r18
     216:	e1 f7       	brne	.-8      	; 0x210 <.do_clear_bss_loop>
     218:	cf d1       	rcall	.+926    	; 0x5b8 <main>
     21a:	0c 94 00 0c 	jmp	0x1800	; 0x1800 <_exit>

0000021e <__bad_interrupt>:
     21e:	f0 ce       	rjmp	.-544    	; 0x0 <__vectors>

00000220 <x_yield>:
		.global x_yield
x_yield:
//------------------------------------------------------------------
// Save "callee-save" registers
//------------------------------------------------------------------
		push	r28
     220:	cf 93       	push	r28
		push	r29
     222:	df 93       	push	r29
		push	r2
     224:	2f 92       	push	r2
		push	r3
     226:	3f 92       	push	r3
		push	r4
     228:	4f 92       	push	r4
		push	r5
     22a:	5f 92       	push	r5
		push	r6
     22c:	6f 92       	push	r6
		push	r7
     22e:	7f 92       	push	r7
		push	r8
     230:	8f 92       	push	r8
		push	r9
     232:	9f 92       	push	r9
		push	r10
     234:	af 92       	push	r10
		push	r11
     236:	bf 92       	push	r11
		push	r12
     238:	cf 92       	push	r12
		push	r13
     23a:	df 92       	push	r13
		push	r14
     23c:	ef 92       	push	r14
		push	r15
     23e:	ff 92       	push	r15
		push	r16
     240:	0f 93       	push	r16
		push	r17
     242:	1f 93       	push	r17

//------------------------------------------------------------------
//   Get thread ID and mask
//------------------------------------------------------------------

		lds	r20,	x_thread_id
     244:	40 91 3a 02 	lds	r20, 0x023A
		lds	r21,	x_thread_mask
     248:	50 91 72 02 	lds	r21, 0x0272

//------------------------------------------------------------------
// Store SP into current thread's stack-save area
//------------------------------------------------------------------
		;compute index into stacks array
		mov	r22,	r20			;make a copy of the thread id
     24c:	64 2f       	mov	r22, r20
		lsl	r22	  				;left shift two to multiply by 2
     24e:	66 0f       	add	r22, r22
		lsl	r22	  				;left shift two to multiply by 2
     250:	66 0f       	add	r22, r22
		ldi	r30,	lo8(stacks)	;load the address of the array
     252:	e2 e5       	ldi	r30, 0x52	; 82
		ldi r31,	hi8(stacks)	;load the other byte
     254:	f2 e0       	ldi	r31, 0x02	; 2
		add	r30,	r22			;increment the address by index
     256:	e6 0f       	add	r30, r22
		;adc r31,	0			;pull in the carry from previous, if any
		
		;write the SP into the stack save area
		lds	r16,	(0x5d)		;Load SP low byte
     258:	00 91 5d 00 	lds	r16, 0x005D
		st	Z,		r16			;save SP low byte
     25c:	00 83       	st	Z, r16
		lds r16,	(0x5e)		;Load SP high byte
     25e:	00 91 5e 00 	lds	r16, 0x005E
		std	Z+1,	r16			;save SP high byte
     262:	01 83       	std	Z+1, r16	; 0x01

00000264 <x_schedule>:
;                         if entered from x_new() function
;-------------------------------------------------------------------------
		.global	x_schedule
x_schedule:
	// determine READY status of each thread
		lds r18,	disables	;load the disabled status
     264:	20 91 3b 02 	lds	r18, 0x023B
		lds r19,	suspends	;load the suspended status
     268:	30 91 3d 02 	lds	r19, 0x023D
		or	r18,	r19			;or disables and suspends
     26c:	23 2b       	or	r18, r19
		lds r19,	delays		;load the delayed status
     26e:	30 91 3c 02 	lds	r19, 0x023C
		or	r18,	r19			;or disables, suspends, and delays
     272:	23 2b       	or	r18, r19

		lds	r20,	x_thread_id	;load the id of the current thread
     274:	40 91 3a 02 	lds	r20, 0x023A
		lds r21,	x_thread_mask	;load the thread id mask
     278:	50 91 72 02 	lds	r21, 0x0272

		ldi	r23,	0			;load loop counter
     27c:	70 e0       	ldi	r23, 0x00	; 0

0000027e <loop>:

;------------------------------------------------
;   Loop through all threads to test for READY
;------------------------------------------------
loop:
		cpi	r23,	8			;compare loop counter to 7
     27e:	78 30       	cpi	r23, 0x08	; 8
		breq x_schedule			;if equal, restart scheduling
     280:	89 f3       	breq	.-30     	; 0x264 <x_schedule>
		inc	r20					;increment thread id
     282:	43 95       	inc	r20
		lsl r21					;rotate thread mask left
     284:	55 0f       	add	r21, r21
		cpi	r21,	0			;check if thread mask is zero
     286:	50 30       	cpi	r21, 0x00	; 0
		brne skip				;jump over second rotate
     288:	11 f4       	brne	.+4      	; 0x28e <skip>
		inc r21					;reset the thread mask to one
     28a:	53 95       	inc	r21
		ldi	r20,	0			;reset thread id to zero
     28c:	40 e0       	ldi	r20, 0x00	; 0

0000028e <skip>:
skip:	
		mov r22,	r21			;copy the thread mask
     28e:	65 2f       	mov	r22, r21
		and	r22,	r18			;compare thread mask to or-ed statuses
     290:	62 23       	and	r22, r18
		inc r23					;increment loop counter
     292:	73 95       	inc	r23
		cpi r22,	0			;if the result is zero, this next thread is ready
     294:	60 30       	cpi	r22, 0x00	; 0
		brne loop				;else restart the loop
     296:	99 f7       	brne	.-26     	; 0x27e <loop>

		jmp	restore				;skip the nap code
     298:	01 c0       	rjmp	.+2      	; 0x29c <restore>

0000029a <nap>:
;----------------------------------------------------------
nap:
		; add sleep instructions here...
		;sleep
		;TODO: uncomment & implement
		rjmp	x_schedule			
     29a:	e4 cf       	rjmp	.-56     	; 0x264 <x_schedule>

0000029c <restore>:
restore:
		;r20 holds thread id
		;r21 holds thread mask

		;set the thread id
		sts x_thread_id,	r20
     29c:	40 93 3a 02 	sts	0x023A, r20
		;set the thread mask
		sts x_thread_mask, r21
     2a0:	50 93 72 02 	sts	0x0272, r21

		;compute index into stacks array
		mov	r22,	r20			;make a copy of the thread id
     2a4:	64 2f       	mov	r22, r20
		lsl	r22	  				;left shift two to multiply by 2
     2a6:	66 0f       	add	r22, r22
		lsl	r22	  				;left shift two to multiply by 2
     2a8:	66 0f       	add	r22, r22
		ldi	r30,	lo8(stacks)	;load the address of the array
     2aa:	e2 e5       	ldi	r30, 0x52	; 82
		ldi r31,	hi8(stacks)	;load the other byte
     2ac:	f2 e0       	ldi	r31, 0x02	; 2
		add	r30,	r22			;increment the address by index
     2ae:	e6 0f       	add	r30, r22
		;adc r31,	0			;pull in the carry from previous, if any
		
		// update hardware SP
		ld	r23,	Z+			;load new thread's low SP byte
     2b0:	71 91       	ld	r23, Z+
		ld	r24,	Z			;load new thread's high SP byte
     2b2:	80 81       	ld	r24, Z
		sts	(0x5d),	r23			;change lower SP byte
     2b4:	70 93 5d 00 	sts	0x005D, r23
		sts (0x5e),	r24			;change upper SP byte
     2b8:	80 93 5e 00 	sts	0x005E, r24

		// Restore registers
		pop	r17
     2bc:	1f 91       	pop	r17
		pop	r16
     2be:	0f 91       	pop	r16
		pop	r15
     2c0:	ff 90       	pop	r15
		pop	r14
     2c2:	ef 90       	pop	r14
		pop	r13
     2c4:	df 90       	pop	r13
		pop	r12
     2c6:	cf 90       	pop	r12
		pop	r11
     2c8:	bf 90       	pop	r11
		pop	r10
     2ca:	af 90       	pop	r10
		pop	r9
     2cc:	9f 90       	pop	r9
		pop	r8
     2ce:	8f 90       	pop	r8
		pop	r7
     2d0:	7f 90       	pop	r7
		pop	r6
     2d2:	6f 90       	pop	r6
		pop	r5
     2d4:	5f 90       	pop	r5
		pop	r4
     2d6:	4f 90       	pop	r4
		pop	r3
     2d8:	3f 90       	pop	r3
		pop	r2
     2da:	2f 90       	pop	r2
		pop	r29
     2dc:	df 91       	pop	r29
		pop	r28
     2de:	cf 91       	pop	r28

		// Return to next thread
		ret
     2e0:	08 95       	ret

000002e2 <x_init>:
	}
	if (tid == x_thread_id) {
		//we've just overwritten the current thread, so reschedule
		x_schedule();
	}
}
     2e2:	cf 93       	push	r28
     2e4:	df 93       	push	r29
     2e6:	e2 e5       	ldi	r30, 0x52	; 82
     2e8:	f2 e0       	ldi	r31, 0x02	; 2
     2ea:	8f e7       	ldi	r24, 0x7F	; 127
     2ec:	91 e2       	ldi	r25, 0x21	; 33
     2ee:	91 83       	std	Z+1, r25	; 0x01
     2f0:	80 83       	st	Z, r24
     2f2:	93 83       	std	Z+3, r25	; 0x03
     2f4:	82 83       	std	Z+2, r24	; 0x02
     2f6:	8f ef       	ldi	r24, 0xFF	; 255
     2f8:	90 e2       	ldi	r25, 0x20	; 32
     2fa:	95 83       	std	Z+5, r25	; 0x05
     2fc:	84 83       	std	Z+4, r24	; 0x04
     2fe:	97 83       	std	Z+7, r25	; 0x07
     300:	86 83       	std	Z+6, r24	; 0x06
     302:	8f e7       	ldi	r24, 0x7F	; 127
     304:	90 e2       	ldi	r25, 0x20	; 32
     306:	91 87       	std	Z+9, r25	; 0x09
     308:	80 87       	std	Z+8, r24	; 0x08
     30a:	93 87       	std	Z+11, r25	; 0x0b
     30c:	82 87       	std	Z+10, r24	; 0x0a
     30e:	8f ef       	ldi	r24, 0xFF	; 255
     310:	9f e1       	ldi	r25, 0x1F	; 31
     312:	95 87       	std	Z+13, r25	; 0x0d
     314:	84 87       	std	Z+12, r24	; 0x0c
     316:	97 87       	std	Z+15, r25	; 0x0f
     318:	86 87       	std	Z+14, r24	; 0x0e
     31a:	8f e7       	ldi	r24, 0x7F	; 127
     31c:	9f e1       	ldi	r25, 0x1F	; 31
     31e:	91 8b       	std	Z+17, r25	; 0x11
     320:	80 8b       	std	Z+16, r24	; 0x10
     322:	93 8b       	std	Z+19, r25	; 0x13
     324:	82 8b       	std	Z+18, r24	; 0x12
     326:	8f ef       	ldi	r24, 0xFF	; 255
     328:	9e e1       	ldi	r25, 0x1E	; 30
     32a:	95 8b       	std	Z+21, r25	; 0x15
     32c:	84 8b       	std	Z+20, r24	; 0x14
     32e:	97 8b       	std	Z+23, r25	; 0x17
     330:	86 8b       	std	Z+22, r24	; 0x16
     332:	8f e7       	ldi	r24, 0x7F	; 127
     334:	9e e1       	ldi	r25, 0x1E	; 30
     336:	91 8f       	std	Z+25, r25	; 0x19
     338:	80 8f       	std	Z+24, r24	; 0x18
     33a:	93 8f       	std	Z+27, r25	; 0x1b
     33c:	82 8f       	std	Z+26, r24	; 0x1a
     33e:	8f ef       	ldi	r24, 0xFF	; 255
     340:	9d e1       	ldi	r25, 0x1D	; 29
     342:	95 8f       	std	Z+29, r25	; 0x1d
     344:	84 8f       	std	Z+28, r24	; 0x1c
     346:	97 8f       	std	Z+31, r25	; 0x1f
     348:	86 8f       	std	Z+30, r24	; 0x1e
     34a:	8a ea       	ldi	r24, 0xAA	; 170
     34c:	80 93 00 21 	sts	0x2100, r24
     350:	80 93 80 20 	sts	0x2080, r24
     354:	80 93 00 20 	sts	0x2000, r24
     358:	80 93 80 1f 	sts	0x1F80, r24
     35c:	80 93 00 1f 	sts	0x1F00, r24
     360:	80 93 80 1e 	sts	0x1E80, r24
     364:	80 93 00 1e 	sts	0x1E00, r24
     368:	80 93 80 1d 	sts	0x1D80, r24
     36c:	10 92 4e 02 	sts	0x024E, r1
     370:	10 92 4f 02 	sts	0x024F, r1
     374:	10 92 50 02 	sts	0x0250, r1
     378:	10 92 51 02 	sts	0x0251, r1
     37c:	ee e3       	ldi	r30, 0x3E	; 62
     37e:	f2 e0       	ldi	r31, 0x02	; 2
     380:	11 82       	std	Z+1, r1	; 0x01
     382:	10 82       	st	Z, r1
     384:	13 82       	std	Z+3, r1	; 0x03
     386:	12 82       	std	Z+2, r1	; 0x02
     388:	15 82       	std	Z+5, r1	; 0x05
     38a:	14 82       	std	Z+4, r1	; 0x04
     38c:	17 82       	std	Z+7, r1	; 0x07
     38e:	16 82       	std	Z+6, r1	; 0x06
     390:	11 86       	std	Z+9, r1	; 0x09
     392:	10 86       	std	Z+8, r1	; 0x08
     394:	13 86       	std	Z+11, r1	; 0x0b
     396:	12 86       	std	Z+10, r1	; 0x0a
     398:	15 86       	std	Z+13, r1	; 0x0d
     39a:	14 86       	std	Z+12, r1	; 0x0c
     39c:	17 86       	std	Z+15, r1	; 0x0f
     39e:	16 86       	std	Z+14, r1	; 0x0e
     3a0:	8e ef       	ldi	r24, 0xFE	; 254
     3a2:	80 93 3b 02 	sts	0x023B, r24
     3a6:	10 92 3c 02 	sts	0x023C, r1
     3aa:	10 92 3d 02 	sts	0x023D, r1
     3ae:	10 92 3a 02 	sts	0x023A, r1
     3b2:	81 e0       	ldi	r24, 0x01	; 1
     3b4:	80 93 72 02 	sts	0x0272, r24
     3b8:	82 e0       	ldi	r24, 0x02	; 2
     3ba:	84 bd       	out	0x24, r24	; 36
     3bc:	9a ef       	ldi	r25, 0xFA	; 250
     3be:	97 bd       	out	0x27, r25	; 39
     3c0:	80 93 6e 00 	sts	0x006E, r24
     3c4:	83 e0       	ldi	r24, 0x03	; 3
     3c6:	85 bd       	out	0x25, r24	; 37
     3c8:	8d b7       	in	r24, 0x3d	; 61
     3ca:	9e b7       	in	r25, 0x3e	; 62
     3cc:	81 15       	cp	r24, r1
     3ce:	92 42       	sbci	r25, 0x22	; 34
     3d0:	b0 f4       	brcc	.+44     	; 0x3fe <x_init+0x11c>
     3d2:	a0 e8       	ldi	r26, 0x80	; 128
     3d4:	b1 e2       	ldi	r27, 0x21	; 33
     3d6:	80 e0       	ldi	r24, 0x00	; 0
     3d8:	92 e2       	ldi	r25, 0x22	; 34
     3da:	c1 e0       	ldi	r28, 0x01	; 1
     3dc:	d2 e2       	ldi	r29, 0x22	; 34
     3de:	fc 01       	movw	r30, r24
     3e0:	22 91       	ld	r18, -Z
     3e2:	2e 93       	st	-X, r18
     3e4:	be 01       	movw	r22, r28
     3e6:	68 1b       	sub	r22, r24
     3e8:	79 0b       	sbc	r23, r25
     3ea:	9c 01       	movw	r18, r24
     3ec:	22 50       	subi	r18, 0x02	; 2
     3ee:	31 09       	sbc	r19, r1
     3f0:	4d b7       	in	r20, 0x3d	; 61
     3f2:	5e b7       	in	r21, 0x3e	; 62
     3f4:	cf 01       	movw	r24, r30
     3f6:	24 17       	cp	r18, r20
     3f8:	35 07       	cpc	r19, r21
     3fa:	88 f7       	brcc	.-30     	; 0x3de <x_init+0xfc>
     3fc:	02 c0       	rjmp	.+4      	; 0x402 <x_init+0x120>
     3fe:	60 e0       	ldi	r22, 0x00	; 0
     400:	70 e0       	ldi	r23, 0x00	; 0
     402:	f8 94       	cli
     404:	80 e8       	ldi	r24, 0x80	; 128
     406:	91 e2       	ldi	r25, 0x21	; 33
     408:	86 1b       	sub	r24, r22
     40a:	97 0b       	sbc	r25, r23
     40c:	9e bf       	out	0x3e, r25	; 62
     40e:	8d bf       	out	0x3d, r24	; 61
     410:	78 94       	sei
     412:	df 91       	pop	r29
     414:	cf 91       	pop	r28
     416:	08 95       	ret

00000418 <x_delay>:
 * tick frequency, set at system initialization.
 *
 * Note: This function MAY NOT be called from an
 * interrupt handler.
 */
void x_delay(int ticks) {
     418:	9c 01       	movw	r18, r24
	//disable this thread
	delays |= x_thread_mask;
     41a:	80 91 3c 02 	lds	r24, 0x023C
     41e:	90 91 72 02 	lds	r25, 0x0272
     422:	98 2b       	or	r25, r24
     424:	90 93 3c 02 	sts	0x023C, r25
	cli(); //disable interrupts
     428:	f8 94       	cli
	x_thread_delay[x_thread_id] = ticks;
     42a:	e0 91 3a 02 	lds	r30, 0x023A
     42e:	f0 e0       	ldi	r31, 0x00	; 0
     430:	ee 0f       	add	r30, r30
     432:	ff 1f       	adc	r31, r31
     434:	e2 5c       	subi	r30, 0xC2	; 194
     436:	fd 4f       	sbci	r31, 0xFD	; 253
     438:	31 83       	std	Z+1, r19	; 0x01
     43a:	20 83       	st	Z, r18
	sei(); //enable interrupts
     43c:	78 94       	sei
	x_yield(); //reschedule
     43e:	f0 ce       	rjmp	.-544    	; 0x220 <x_yield>
     440:	08 95       	ret

00000442 <__vector_21>:
/*
 * The interrupt service routine for timer0.
 * Decrements delays for all threads and enables threads
 * whose delay values reach zero.
 */
ISR(TIMER0_COMPA_vect){
     442:	1f 92       	push	r1
     444:	0f 92       	push	r0
     446:	0f b6       	in	r0, 0x3f	; 63
     448:	0f 92       	push	r0
     44a:	11 24       	eor	r1, r1
     44c:	0b b6       	in	r0, 0x3b	; 59
     44e:	0f 92       	push	r0
     450:	2f 93       	push	r18
     452:	3f 93       	push	r19
     454:	4f 93       	push	r20
     456:	5f 93       	push	r21
     458:	6f 93       	push	r22
     45a:	8f 93       	push	r24
     45c:	9f 93       	push	r25
     45e:	af 93       	push	r26
     460:	bf 93       	push	r27
     462:	ef 93       	push	r30
     464:	ff 93       	push	r31
     466:	60 91 3c 02 	lds	r22, 0x023C
	int i = 0;
     46a:	80 e0       	ldi	r24, 0x00	; 0
     46c:	90 e0       	ldi	r25, 0x00	; 0
			x_thread_delay[i]--;
		}
		//if the current thread isn't disabled
		if (x_thread_delay[i] == 0) {
			//enable this thread
			delays &= ~(0x1 << i);
     46e:	41 e0       	ldi	r20, 0x01	; 1
     470:	50 e0       	ldi	r21, 0x00	; 0
 */
ISR(TIMER0_COMPA_vect){
	int i = 0;
	for (; i < NUM_THREADS; i++) {
		//if the count is nonzero
		if (x_thread_delay[i] > 0) {
     472:	fc 01       	movw	r30, r24
     474:	ee 0f       	add	r30, r30
     476:	ff 1f       	adc	r31, r31
     478:	e2 5c       	subi	r30, 0xC2	; 194
     47a:	fd 4f       	sbci	r31, 0xFD	; 253
     47c:	20 81       	ld	r18, Z
     47e:	31 81       	ldd	r19, Z+1	; 0x01
     480:	23 2b       	or	r18, r19
     482:	59 f0       	breq	.+22     	; 0x49a <__vector_21+0x58>
			//decrement the count
			x_thread_delay[i]--;
     484:	fc 01       	movw	r30, r24
     486:	ee 0f       	add	r30, r30
     488:	ff 1f       	adc	r31, r31
     48a:	e2 5c       	subi	r30, 0xC2	; 194
     48c:	fd 4f       	sbci	r31, 0xFD	; 253
     48e:	20 81       	ld	r18, Z
     490:	31 81       	ldd	r19, Z+1	; 0x01
     492:	21 50       	subi	r18, 0x01	; 1
     494:	31 09       	sbc	r19, r1
     496:	31 83       	std	Z+1, r19	; 0x01
     498:	20 83       	st	Z, r18
		}
		//if the current thread isn't disabled
		if (x_thread_delay[i] == 0) {
     49a:	fc 01       	movw	r30, r24
     49c:	ee 0f       	add	r30, r30
     49e:	ff 1f       	adc	r31, r31
     4a0:	e2 5c       	subi	r30, 0xC2	; 194
     4a2:	fd 4f       	sbci	r31, 0xFD	; 253
     4a4:	20 81       	ld	r18, Z
     4a6:	31 81       	ldd	r19, Z+1	; 0x01
     4a8:	23 2b       	or	r18, r19
     4aa:	49 f4       	brne	.+18     	; 0x4be <__vector_21+0x7c>
			//enable this thread
			delays &= ~(0x1 << i);
     4ac:	9a 01       	movw	r18, r20
     4ae:	08 2e       	mov	r0, r24
     4b0:	02 c0       	rjmp	.+4      	; 0x4b6 <__vector_21+0x74>
     4b2:	22 0f       	add	r18, r18
     4b4:	33 1f       	adc	r19, r19
     4b6:	0a 94       	dec	r0
     4b8:	e2 f7       	brpl	.-8      	; 0x4b2 <__vector_21+0x70>
     4ba:	20 95       	com	r18
     4bc:	62 23       	and	r22, r18
 * Decrements delays for all threads and enables threads
 * whose delay values reach zero.
 */
ISR(TIMER0_COMPA_vect){
	int i = 0;
	for (; i < NUM_THREADS; i++) {
     4be:	01 96       	adiw	r24, 0x01	; 1
     4c0:	88 30       	cpi	r24, 0x08	; 8
     4c2:	91 05       	cpc	r25, r1
     4c4:	b1 f6       	brne	.-84     	; 0x472 <__vector_21+0x30>
     4c6:	60 93 3c 02 	sts	0x023C, r22
		if (x_thread_delay[i] == 0) {
			//enable this thread
			delays &= ~(0x1 << i);
		}
	}
	ticks++;
     4ca:	80 91 4e 02 	lds	r24, 0x024E
     4ce:	90 91 4f 02 	lds	r25, 0x024F
     4d2:	a0 91 50 02 	lds	r26, 0x0250
     4d6:	b0 91 51 02 	lds	r27, 0x0251
     4da:	01 96       	adiw	r24, 0x01	; 1
     4dc:	a1 1d       	adc	r26, r1
     4de:	b1 1d       	adc	r27, r1
     4e0:	80 93 4e 02 	sts	0x024E, r24
     4e4:	90 93 4f 02 	sts	0x024F, r25
     4e8:	a0 93 50 02 	sts	0x0250, r26
     4ec:	b0 93 51 02 	sts	0x0251, r27
}
     4f0:	ff 91       	pop	r31
     4f2:	ef 91       	pop	r30
     4f4:	bf 91       	pop	r27
     4f6:	af 91       	pop	r26
     4f8:	9f 91       	pop	r25
     4fa:	8f 91       	pop	r24
     4fc:	6f 91       	pop	r22
     4fe:	5f 91       	pop	r21
     500:	4f 91       	pop	r20
     502:	3f 91       	pop	r19
     504:	2f 91       	pop	r18
     506:	0f 90       	pop	r0
     508:	0b be       	out	0x3b, r0	; 59
     50a:	0f 90       	pop	r0
     50c:	0f be       	out	0x3f, r0	; 63
     50e:	0f 90       	pop	r0
     510:	1f 90       	pop	r1
     512:	18 95       	reti

00000514 <ADC_enable>:

/*
 * Turn off the ADC
 */
void ADC_disable() {
	ADCSRA ^= 0x1 << ADEN; //disable conversion
     514:	ec e7       	ldi	r30, 0x7C	; 124
     516:	f0 e0       	ldi	r31, 0x00	; 0
     518:	80 81       	ld	r24, Z
     51a:	80 64       	ori	r24, 0x40	; 64
     51c:	80 83       	st	Z, r24
     51e:	ea e7       	ldi	r30, 0x7A	; 122
     520:	f0 e0       	ldi	r31, 0x00	; 0
     522:	80 81       	ld	r24, Z
     524:	87 60       	ori	r24, 0x07	; 7
     526:	80 83       	st	Z, r24
     528:	80 81       	ld	r24, Z
     52a:	80 68       	ori	r24, 0x80	; 128
     52c:	80 83       	st	Z, r24
     52e:	08 95       	ret

00000530 <ADC_read>:
 * Read from the given channel (as defined in adc.h) at the given
 * resolution and single-ended if the singleEnded flag is true.
 * NOTE: currently only supports 10-bit resolution and single-ended
 * conversions.
 */
int ADC_read(byte channel, byte resolution, bool singleEnded) {
     530:	cf 93       	push	r28
     532:	df 93       	push	r29
	if (resolution != 10 || !singleEnded) {	return 0; /*invalid options*/}
     534:	6a 30       	cpi	r22, 0x0A	; 10
     536:	c1 f5       	brne	.+112    	; 0x5a8 <ADC_read+0x78>
     538:	44 23       	and	r20, r20
     53a:	c9 f1       	breq	.+114    	; 0x5ae <ADC_read+0x7e>

	//break the channel into pieces and set the MUX
	byte low, high;
	char mux40 = channel & 0x1F;
	char mux5 = (channel & 0x20)>>2; //this shift gives it the correct position within ADCSRB
	ADMUX |= mux40;//set bits zero through four of the MUX
     53c:	ec e7       	ldi	r30, 0x7C	; 124
     53e:	f0 e0       	ldi	r31, 0x00	; 0
     540:	90 81       	ld	r25, Z
int ADC_read(byte channel, byte resolution, bool singleEnded) {
	if (resolution != 10 || !singleEnded) {	return 0; /*invalid options*/}

	//break the channel into pieces and set the MUX
	byte low, high;
	char mux40 = channel & 0x1F;
     542:	28 2f       	mov	r18, r24
     544:	2f 71       	andi	r18, 0x1F	; 31
	char mux5 = (channel & 0x20)>>2; //this shift gives it the correct position within ADCSRB
	ADMUX |= mux40;//set bits zero through four of the MUX
     546:	92 2b       	or	r25, r18
     548:	90 83       	st	Z, r25
	ADCSRB |= mux5;//set bit five of the MUX
     54a:	eb e7       	ldi	r30, 0x7B	; 123
     54c:	f0 e0       	ldi	r31, 0x00	; 0
     54e:	20 81       	ld	r18, Z
	if (resolution != 10 || !singleEnded) {	return 0; /*invalid options*/}

	//break the channel into pieces and set the MUX
	byte low, high;
	char mux40 = channel & 0x1F;
	char mux5 = (channel & 0x20)>>2; //this shift gives it the correct position within ADCSRB
     550:	98 2f       	mov	r25, r24
     552:	90 72       	andi	r25, 0x20	; 32
     554:	89 2f       	mov	r24, r25
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	95 95       	asr	r25
     55a:	87 95       	ror	r24
     55c:	95 95       	asr	r25
     55e:	87 95       	ror	r24
	ADMUX |= mux40;//set bits zero through four of the MUX
	ADCSRB |= mux5;//set bit five of the MUX
     560:	82 2b       	or	r24, r18
     562:	80 83       	st	Z, r24
     564:	45 e0       	ldi	r20, 0x05	; 5
     566:	50 e0       	ldi	r21, 0x00	; 0
	
	//sum of total samples thus far
	int totalOfFive = 0;
     568:	60 e0       	ldi	r22, 0x00	; 0
     56a:	70 e0       	ldi	r23, 0x00	; 0
	for (int i = 0; i < 5; i++) {
		ADCSRA |= 0x1 << ADSC; //start single conversion
     56c:	ea e7       	ldi	r30, 0x7A	; 122
     56e:	f0 e0       	ldi	r31, 0x00	; 0

		while (ADCSRA & (0x40)) {/*busy wait for bit to clear (indicates conversion complete)*/}
		low = ADCL;
     570:	c8 e7       	ldi	r28, 0x78	; 120
     572:	d0 e0       	ldi	r29, 0x00	; 0
		high = ADCH;
     574:	a9 e7       	ldi	r26, 0x79	; 121
     576:	b0 e0       	ldi	r27, 0x00	; 0
	ADCSRB |= mux5;//set bit five of the MUX
	
	//sum of total samples thus far
	int totalOfFive = 0;
	for (int i = 0; i < 5; i++) {
		ADCSRA |= 0x1 << ADSC; //start single conversion
     578:	90 81       	ld	r25, Z
     57a:	90 64       	ori	r25, 0x40	; 64
     57c:	90 83       	st	Z, r25

		while (ADCSRA & (0x40)) {/*busy wait for bit to clear (indicates conversion complete)*/}
     57e:	90 81       	ld	r25, Z
     580:	96 fd       	sbrc	r25, 6
     582:	fd cf       	rjmp	.-6      	; 0x57e <ADC_read+0x4e>
		low = ADCL;
     584:	88 81       	ld	r24, Y
		high = ADCH;
     586:	2c 91       	ld	r18, X
		
		totalOfFive += (((int) high) << 8) + low; //attach two bytes together
     588:	30 e0       	ldi	r19, 0x00	; 0
     58a:	32 2f       	mov	r19, r18
     58c:	22 27       	eor	r18, r18
     58e:	28 0f       	add	r18, r24
     590:	31 1d       	adc	r19, r1
     592:	62 0f       	add	r22, r18
     594:	73 1f       	adc	r23, r19
     596:	41 50       	subi	r20, 0x01	; 1
     598:	51 09       	sbc	r21, r1
	ADMUX |= mux40;//set bits zero through four of the MUX
	ADCSRB |= mux5;//set bit five of the MUX
	
	//sum of total samples thus far
	int totalOfFive = 0;
	for (int i = 0; i < 5; i++) {
     59a:	71 f7       	brne	.-36     	; 0x578 <ADC_read+0x48>
		high = ADCH;
		
		totalOfFive += (((int) high) << 8) + low; //attach two bytes together
	}
	
	return totalOfFive/5; //we'll just deal with the lost precision
     59c:	cb 01       	movw	r24, r22
     59e:	65 e0       	ldi	r22, 0x05	; 5
     5a0:	70 e0       	ldi	r23, 0x00	; 0
     5a2:	8d d2       	rcall	.+1306   	; 0xabe <__divmodhi4>
     5a4:	cb 01       	movw	r24, r22
     5a6:	05 c0       	rjmp	.+10     	; 0x5b2 <ADC_read+0x82>
 * resolution and single-ended if the singleEnded flag is true.
 * NOTE: currently only supports 10-bit resolution and single-ended
 * conversions.
 */
int ADC_read(byte channel, byte resolution, bool singleEnded) {
	if (resolution != 10 || !singleEnded) {	return 0; /*invalid options*/}
     5a8:	80 e0       	ldi	r24, 0x00	; 0
     5aa:	90 e0       	ldi	r25, 0x00	; 0
     5ac:	02 c0       	rjmp	.+4      	; 0x5b2 <ADC_read+0x82>
     5ae:	80 e0       	ldi	r24, 0x00	; 0
     5b0:	90 e0       	ldi	r25, 0x00	; 0
		
		totalOfFive += (((int) high) << 8) + low; //attach two bytes together
	}
	
	return totalOfFive/5; //we'll just deal with the lost precision
     5b2:	df 91       	pop	r29
     5b4:	cf 91       	pop	r28
     5b6:	08 95       	ret

000005b8 <main>:
/*
 * Kick off the whole shabang
 */
int main(void)
{
	x_init(); //kick off kernel
     5b8:	94 de       	rcall	.-728    	; 0x2e2 <x_init>
	serial_open(19200, SERIAL_8N1); //prep serial
     5ba:	46 e0       	ldi	r20, 0x06	; 6
     5bc:	50 e0       	ldi	r21, 0x00	; 0
     5be:	60 e0       	ldi	r22, 0x00	; 0
     5c0:	7b e4       	ldi	r23, 0x4B	; 75
     5c2:	80 e0       	ldi	r24, 0x00	; 0
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	50 d0       	rcall	.+160    	; 0x668 <serial_open>
	ADC_enable(); //enable ADC
     5c8:	a5 df       	rcall	.-182    	; 0x514 <ADC_enable>
	//declare locals
	int value;
	char * message1;
	char * message2;
	float fraction;
	message1 = (char *) malloc(64);
     5ca:	80 e4       	ldi	r24, 0x40	; 64
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	bd d2       	rcall	.+1402   	; 0xb4a <malloc>
     5d0:	ec 01       	movw	r28, r24
	message2 = (char *) malloc(64);
     5d2:	80 e4       	ldi	r24, 0x40	; 64
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	b9 d2       	rcall	.+1394   	; 0xb4a <malloc>
     5d8:	a8 2e       	mov	r10, r24
     5da:	b9 2e       	mov	r11, r25
	while(1){
		value = ADC_read(ADC0, 10, 1);
		fraction = ((float) value)/1023.0 * 5;//convert to number of volts
		dtostrf(fraction, 3, 2, message1);
		serial_write_string(message1, strlen(message1));
		sprintf(message2," volts (0x%x)\n\r", value);
     5dc:	0f 2e       	mov	r0, r31
     5de:	fa e2       	ldi	r31, 0x2A	; 42
     5e0:	ef 2e       	mov	r14, r31
     5e2:	f2 e0       	ldi	r31, 0x02	; 2
     5e4:	ff 2e       	mov	r15, r31
     5e6:	f0 2d       	mov	r31, r0
	float fraction;
	message1 = (char *) malloc(64);
	message2 = (char *) malloc(64);
	//sample pot every 200ms and display results
	while(1){
		value = ADC_read(ADC0, 10, 1);
     5e8:	41 e0       	ldi	r20, 0x01	; 1
     5ea:	6a e0       	ldi	r22, 0x0A	; 10
     5ec:	80 e0       	ldi	r24, 0x00	; 0
     5ee:	a0 df       	rcall	.-192    	; 0x530 <ADC_read>
     5f0:	6c 01       	movw	r12, r24
		fraction = ((float) value)/1023.0 * 5;//convert to number of volts
     5f2:	bc 01       	movw	r22, r24
     5f4:	99 0f       	add	r25, r25
     5f6:	88 0b       	sbc	r24, r24
     5f8:	99 0b       	sbc	r25, r25
     5fa:	72 d1       	rcall	.+740    	; 0x8e0 <__floatsisf>
     5fc:	20 e0       	ldi	r18, 0x00	; 0
     5fe:	30 ec       	ldi	r19, 0xC0	; 192
     600:	4f e7       	ldi	r20, 0x7F	; 127
     602:	54 e4       	ldi	r21, 0x44	; 68
     604:	03 d1       	rcall	.+518    	; 0x80c <__divsf3>
     606:	20 e0       	ldi	r18, 0x00	; 0
     608:	30 e0       	ldi	r19, 0x00	; 0
     60a:	40 ea       	ldi	r20, 0xA0	; 160
     60c:	50 e4       	ldi	r21, 0x40	; 64
     60e:	f4 d1       	rcall	.+1000   	; 0x9f8 <__mulsf3>
		dtostrf(fraction, 3, 2, message1);
     610:	8e 01       	movw	r16, r28
     612:	22 e0       	ldi	r18, 0x02	; 2
     614:	43 e0       	ldi	r20, 0x03	; 3
     616:	7a d2       	rcall	.+1268   	; 0xb0c <dtostrf>
		serial_write_string(message1, strlen(message1));
     618:	fe 01       	movw	r30, r28
     61a:	01 90       	ld	r0, Z+
     61c:	00 20       	and	r0, r0
     61e:	e9 f7       	brne	.-6      	; 0x61a <main+0x62>
     620:	31 97       	sbiw	r30, 0x01	; 1
     622:	bf 01       	movw	r22, r30
     624:	6c 1b       	sub	r22, r28
     626:	7d 0b       	sbc	r23, r29
     628:	ce 01       	movw	r24, r28
     62a:	db d0       	rcall	.+438    	; 0x7e2 <serial_write_string>
		sprintf(message2," volts (0x%x)\n\r", value);
     62c:	df 92       	push	r13
     62e:	cf 92       	push	r12
     630:	ff 92       	push	r15
     632:	ef 92       	push	r14
     634:	bf 92       	push	r11
     636:	af 92       	push	r10
     638:	b5 d3       	rcall	.+1898   	; 0xda4 <sprintf>
		serial_write_string(message2, strlen(message2));
     63a:	aa 2d       	mov	r26, r10
     63c:	bb 2d       	mov	r27, r11
     63e:	fd 01       	movw	r30, r26
     640:	01 90       	ld	r0, Z+
     642:	00 20       	and	r0, r0
     644:	e9 f7       	brne	.-6      	; 0x640 <main+0x88>
     646:	31 97       	sbiw	r30, 0x01	; 1
     648:	bf 01       	movw	r22, r30
     64a:	6a 1b       	sub	r22, r26
     64c:	7b 0b       	sbc	r23, r27
     64e:	8a 2d       	mov	r24, r10
     650:	9b 2d       	mov	r25, r11
     652:	c7 d0       	rcall	.+398    	; 0x7e2 <serial_write_string>
		x_delay(200);
     654:	88 ec       	ldi	r24, 0xC8	; 200
     656:	90 e0       	ldi	r25, 0x00	; 0
     658:	df de       	rcall	.-578    	; 0x418 <x_delay>
	}
     65a:	0f 90       	pop	r0
     65c:	0f 90       	pop	r0
     65e:	0f 90       	pop	r0
     660:	0f 90       	pop	r0
     662:	0f 90       	pop	r0
     664:	0f 90       	pop	r0
     666:	c0 cf       	rjmp	.-128    	; 0x5e8 <main+0x30>

00000668 <serial_open>:
	while ( !(UCSR0A & (1<<RXC0)) ) {
		x_yield();
	}
	/* Get and return received data from buffer */
	return UDR0;
}
     668:	f8 94       	cli
     66a:	40 93 c2 00 	sts	0x00C2, r20
     66e:	28 e1       	ldi	r18, 0x18	; 24
     670:	20 93 c1 00 	sts	0x00C1, r18
     674:	e0 ec       	ldi	r30, 0xC0	; 192
     676:	f0 e0       	ldi	r31, 0x00	; 0
     678:	20 81       	ld	r18, Z
     67a:	22 60       	ori	r18, 0x02	; 2
     67c:	20 83       	st	Z, r18
     67e:	60 38       	cpi	r22, 0x80	; 128
     680:	20 e7       	ldi	r18, 0x70	; 112
     682:	72 07       	cpc	r23, r18
     684:	81 05       	cpc	r24, r1
     686:	91 05       	cpc	r25, r1
     688:	09 f4       	brne	.+2      	; 0x68c <serial_open+0x24>
     68a:	5f c0       	rjmp	.+190    	; 0x74a <serial_open+0xe2>
     68c:	0c f5       	brge	.+66     	; 0x6d0 <serial_open+0x68>
     68e:	60 38       	cpi	r22, 0x80	; 128
     690:	25 e2       	ldi	r18, 0x25	; 37
     692:	72 07       	cpc	r23, r18
     694:	81 05       	cpc	r24, r1
     696:	91 05       	cpc	r25, r1
     698:	09 f4       	brne	.+2      	; 0x69c <serial_open+0x34>
     69a:	48 c0       	rjmp	.+144    	; 0x72c <serial_open+0xc4>
     69c:	6c f4       	brge	.+26     	; 0x6b8 <serial_open+0x50>
     69e:	60 36       	cpi	r22, 0x60	; 96
     6a0:	29 e0       	ldi	r18, 0x09	; 9
     6a2:	72 07       	cpc	r23, r18
     6a4:	81 05       	cpc	r24, r1
     6a6:	91 05       	cpc	r25, r1
     6a8:	09 f4       	brne	.+2      	; 0x6ac <serial_open+0x44>
     6aa:	77 c0       	rjmp	.+238    	; 0x79a <serial_open+0x132>
     6ac:	60 3c       	cpi	r22, 0xC0	; 192
     6ae:	72 41       	sbci	r23, 0x12	; 18
     6b0:	81 05       	cpc	r24, r1
     6b2:	91 05       	cpc	r25, r1
     6b4:	b1 f1       	breq	.+108    	; 0x722 <serial_open+0xba>
     6b6:	6c c0       	rjmp	.+216    	; 0x790 <serial_open+0x128>
     6b8:	60 34       	cpi	r22, 0x40	; 64
     6ba:	28 e3       	ldi	r18, 0x38	; 56
     6bc:	72 07       	cpc	r23, r18
     6be:	81 05       	cpc	r24, r1
     6c0:	91 05       	cpc	r25, r1
     6c2:	c9 f1       	breq	.+114    	; 0x736 <serial_open+0xce>
     6c4:	61 15       	cp	r22, r1
     6c6:	7b 44       	sbci	r23, 0x4B	; 75
     6c8:	81 05       	cpc	r24, r1
     6ca:	91 05       	cpc	r25, r1
     6cc:	c9 f1       	breq	.+114    	; 0x740 <serial_open+0xd8>
     6ce:	60 c0       	rjmp	.+192    	; 0x790 <serial_open+0x128>
     6d0:	61 15       	cp	r22, r1
     6d2:	2c e2       	ldi	r18, 0x2C	; 44
     6d4:	72 07       	cpc	r23, r18
     6d6:	21 e0       	ldi	r18, 0x01	; 1
     6d8:	82 07       	cpc	r24, r18
     6da:	91 05       	cpc	r25, r1
     6dc:	09 f4       	brne	.+2      	; 0x6e0 <serial_open+0x78>
     6de:	44 c0       	rjmp	.+136    	; 0x768 <serial_open+0x100>
     6e0:	64 f4       	brge	.+24     	; 0x6fa <serial_open+0x92>
     6e2:	61 15       	cp	r22, r1
     6e4:	26 e9       	ldi	r18, 0x96	; 150
     6e6:	72 07       	cpc	r23, r18
     6e8:	81 05       	cpc	r24, r1
     6ea:	91 05       	cpc	r25, r1
     6ec:	99 f1       	breq	.+102    	; 0x754 <serial_open+0xec>
     6ee:	61 15       	cp	r22, r1
     6f0:	71 4e       	sbci	r23, 0xE1	; 225
     6f2:	81 05       	cpc	r24, r1
     6f4:	91 05       	cpc	r25, r1
     6f6:	99 f1       	breq	.+102    	; 0x75e <serial_open+0xf6>
     6f8:	4b c0       	rjmp	.+150    	; 0x790 <serial_open+0x128>
     6fa:	61 15       	cp	r22, r1
     6fc:	24 e8       	ldi	r18, 0x84	; 132
     6fe:	72 07       	cpc	r23, r18
     700:	23 e0       	ldi	r18, 0x03	; 3
     702:	82 07       	cpc	r24, r18
     704:	91 05       	cpc	r25, r1
     706:	d1 f1       	breq	.+116    	; 0x77c <serial_open+0x114>
     708:	60 39       	cpi	r22, 0x90	; 144
     70a:	20 ed       	ldi	r18, 0xD0	; 208
     70c:	72 07       	cpc	r23, r18
     70e:	23 e0       	ldi	r18, 0x03	; 3
     710:	82 07       	cpc	r24, r18
     712:	91 05       	cpc	r25, r1
     714:	c1 f1       	breq	.+112    	; 0x786 <serial_open+0x11e>
     716:	61 15       	cp	r22, r1
     718:	72 4c       	sbci	r23, 0xC2	; 194
     71a:	81 40       	sbci	r24, 0x01	; 1
     71c:	91 05       	cpc	r25, r1
     71e:	c1 f5       	brne	.+112    	; 0x790 <serial_open+0x128>
     720:	28 c0       	rjmp	.+80     	; 0x772 <serial_open+0x10a>
     722:	80 ea       	ldi	r24, 0xA0	; 160
     724:	91 e0       	ldi	r25, 0x01	; 1
     726:	a0 e0       	ldi	r26, 0x00	; 0
     728:	b0 e0       	ldi	r27, 0x00	; 0
     72a:	3b c0       	rjmp	.+118    	; 0x7a2 <serial_open+0x13a>
     72c:	8f ec       	ldi	r24, 0xCF	; 207
     72e:	90 e0       	ldi	r25, 0x00	; 0
     730:	a0 e0       	ldi	r26, 0x00	; 0
     732:	b0 e0       	ldi	r27, 0x00	; 0
     734:	36 c0       	rjmp	.+108    	; 0x7a2 <serial_open+0x13a>
     736:	8a e8       	ldi	r24, 0x8A	; 138
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	a0 e0       	ldi	r26, 0x00	; 0
     73c:	b0 e0       	ldi	r27, 0x00	; 0
     73e:	31 c0       	rjmp	.+98     	; 0x7a2 <serial_open+0x13a>
     740:	87 e6       	ldi	r24, 0x67	; 103
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	a0 e0       	ldi	r26, 0x00	; 0
     746:	b0 e0       	ldi	r27, 0x00	; 0
     748:	2c c0       	rjmp	.+88     	; 0x7a2 <serial_open+0x13a>
     74a:	84 e4       	ldi	r24, 0x44	; 68
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	a0 e0       	ldi	r26, 0x00	; 0
     750:	b0 e0       	ldi	r27, 0x00	; 0
     752:	27 c0       	rjmp	.+78     	; 0x7a2 <serial_open+0x13a>
     754:	83 e3       	ldi	r24, 0x33	; 51
     756:	90 e0       	ldi	r25, 0x00	; 0
     758:	a0 e0       	ldi	r26, 0x00	; 0
     75a:	b0 e0       	ldi	r27, 0x00	; 0
     75c:	22 c0       	rjmp	.+68     	; 0x7a2 <serial_open+0x13a>
     75e:	82 e2       	ldi	r24, 0x22	; 34
     760:	90 e0       	ldi	r25, 0x00	; 0
     762:	a0 e0       	ldi	r26, 0x00	; 0
     764:	b0 e0       	ldi	r27, 0x00	; 0
     766:	1d c0       	rjmp	.+58     	; 0x7a2 <serial_open+0x13a>
     768:	89 e1       	ldi	r24, 0x19	; 25
     76a:	90 e0       	ldi	r25, 0x00	; 0
     76c:	a0 e0       	ldi	r26, 0x00	; 0
     76e:	b0 e0       	ldi	r27, 0x00	; 0
     770:	18 c0       	rjmp	.+48     	; 0x7a2 <serial_open+0x13a>
     772:	80 e1       	ldi	r24, 0x10	; 16
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	a0 e0       	ldi	r26, 0x00	; 0
     778:	b0 e0       	ldi	r27, 0x00	; 0
     77a:	13 c0       	rjmp	.+38     	; 0x7a2 <serial_open+0x13a>
     77c:	88 e0       	ldi	r24, 0x08	; 8
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	a0 e0       	ldi	r26, 0x00	; 0
     782:	b0 e0       	ldi	r27, 0x00	; 0
     784:	0e c0       	rjmp	.+28     	; 0x7a2 <serial_open+0x13a>
     786:	87 e0       	ldi	r24, 0x07	; 7
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	a0 e0       	ldi	r26, 0x00	; 0
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	09 c0       	rjmp	.+18     	; 0x7a2 <serial_open+0x13a>
     790:	87 e6       	ldi	r24, 0x67	; 103
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	a0 e0       	ldi	r26, 0x00	; 0
     796:	b0 e0       	ldi	r27, 0x00	; 0
     798:	04 c0       	rjmp	.+8      	; 0x7a2 <serial_open+0x13a>
     79a:	80 e4       	ldi	r24, 0x40	; 64
     79c:	93 e0       	ldi	r25, 0x03	; 3
     79e:	a0 e0       	ldi	r26, 0x00	; 0
     7a0:	b0 e0       	ldi	r27, 0x00	; 0
     7a2:	49 2f       	mov	r20, r25
     7a4:	5a 2f       	mov	r21, r26
     7a6:	6b 2f       	mov	r22, r27
     7a8:	77 27       	eor	r23, r23
     7aa:	67 fd       	sbrc	r22, 7
     7ac:	7a 95       	dec	r23
     7ae:	40 93 c5 00 	sts	0x00C5, r20
     7b2:	80 93 c4 00 	sts	0x00C4, r24
     7b6:	78 94       	sei
     7b8:	08 95       	ret

000007ba <serial_write>:

/*
 * Waits for the write buffer to be available, then writes a byte value
 * to the buffer.
 */
void serial_write(char data) {
     7ba:	1f 93       	push	r17
     7bc:	cf 93       	push	r28
     7be:	df 93       	push	r29
     7c0:	18 2f       	mov	r17, r24
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) ) {
     7c2:	80 91 c0 00 	lds	r24, 0x00C0
     7c6:	85 fd       	sbrc	r24, 5
     7c8:	06 c0       	rjmp	.+12     	; 0x7d6 <serial_write+0x1c>
     7ca:	c0 ec       	ldi	r28, 0xC0	; 192
     7cc:	d0 e0       	ldi	r29, 0x00	; 0
		x_yield();
     7ce:	28 dd       	rcall	.-1456   	; 0x220 <x_yield>
 * Waits for the write buffer to be available, then writes a byte value
 * to the buffer.
 */
void serial_write(char data) {
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) ) {
     7d0:	98 81       	ld	r25, Y
     7d2:	95 ff       	sbrs	r25, 5
     7d4:	fc cf       	rjmp	.-8      	; 0x7ce <serial_write+0x14>
		x_yield();
	}
	/* Put data into buffer, sends the data */
	UDR0 = data;
     7d6:	10 93 c6 00 	sts	0x00C6, r17
}
     7da:	df 91       	pop	r29
     7dc:	cf 91       	pop	r28
     7de:	1f 91       	pop	r17
     7e0:	08 95       	ret

000007e2 <serial_write_string>:

/*
 * Write a whole string to the serial console
 */
void serial_write_string(char* data, int length) {
     7e2:	0f 93       	push	r16
     7e4:	1f 93       	push	r17
     7e6:	cf 93       	push	r28
     7e8:	df 93       	push	r29
	int i = 0;
	for (; i < length; i ++) {
     7ea:	16 16       	cp	r1, r22
     7ec:	17 06       	cpc	r1, r23
     7ee:	4c f4       	brge	.+18     	; 0x802 <serial_write_string+0x20>
     7f0:	8c 01       	movw	r16, r24
     7f2:	ec 01       	movw	r28, r24
     7f4:	06 0f       	add	r16, r22
     7f6:	17 1f       	adc	r17, r23
		serial_write(data[i]);
     7f8:	89 91       	ld	r24, Y+
     7fa:	df df       	rcall	.-66     	; 0x7ba <serial_write>
/*
 * Write a whole string to the serial console
 */
void serial_write_string(char* data, int length) {
	int i = 0;
	for (; i < length; i ++) {
     7fc:	c0 17       	cp	r28, r16
     7fe:	d1 07       	cpc	r29, r17
     800:	d9 f7       	brne	.-10     	; 0x7f8 <serial_write_string+0x16>
		serial_write(data[i]);
	}
     802:	df 91       	pop	r29
     804:	cf 91       	pop	r28
     806:	1f 91       	pop	r17
     808:	0f 91       	pop	r16
     80a:	08 95       	ret

0000080c <__divsf3>:
     80c:	0c d0       	rcall	.+24     	; 0x826 <__divsf3x>
     80e:	ba c0       	rjmp	.+372    	; 0x984 <__fp_round>
     810:	b2 d0       	rcall	.+356    	; 0x976 <__fp_pscB>
     812:	40 f0       	brcs	.+16     	; 0x824 <__divsf3+0x18>
     814:	a9 d0       	rcall	.+338    	; 0x968 <__fp_pscA>
     816:	30 f0       	brcs	.+12     	; 0x824 <__divsf3+0x18>
     818:	21 f4       	brne	.+8      	; 0x822 <__divsf3+0x16>
     81a:	5f 3f       	cpi	r21, 0xFF	; 255
     81c:	19 f0       	breq	.+6      	; 0x824 <__divsf3+0x18>
     81e:	9b c0       	rjmp	.+310    	; 0x956 <__fp_inf>
     820:	51 11       	cpse	r21, r1
     822:	e4 c0       	rjmp	.+456    	; 0x9ec <__fp_szero>
     824:	9e c0       	rjmp	.+316    	; 0x962 <__fp_nan>

00000826 <__divsf3x>:
     826:	bf d0       	rcall	.+382    	; 0x9a6 <__fp_split3>
     828:	98 f3       	brcs	.-26     	; 0x810 <__divsf3+0x4>

0000082a <__divsf3_pse>:
     82a:	99 23       	and	r25, r25
     82c:	c9 f3       	breq	.-14     	; 0x820 <__divsf3+0x14>
     82e:	55 23       	and	r21, r21
     830:	b1 f3       	breq	.-20     	; 0x81e <__divsf3+0x12>
     832:	95 1b       	sub	r25, r21
     834:	55 0b       	sbc	r21, r21
     836:	bb 27       	eor	r27, r27
     838:	aa 27       	eor	r26, r26
     83a:	62 17       	cp	r22, r18
     83c:	73 07       	cpc	r23, r19
     83e:	84 07       	cpc	r24, r20
     840:	38 f0       	brcs	.+14     	; 0x850 <__divsf3_pse+0x26>
     842:	9f 5f       	subi	r25, 0xFF	; 255
     844:	5f 4f       	sbci	r21, 0xFF	; 255
     846:	22 0f       	add	r18, r18
     848:	33 1f       	adc	r19, r19
     84a:	44 1f       	adc	r20, r20
     84c:	aa 1f       	adc	r26, r26
     84e:	a9 f3       	breq	.-22     	; 0x83a <__divsf3_pse+0x10>
     850:	33 d0       	rcall	.+102    	; 0x8b8 <__divsf3_pse+0x8e>
     852:	0e 2e       	mov	r0, r30
     854:	3a f0       	brmi	.+14     	; 0x864 <__divsf3_pse+0x3a>
     856:	e0 e8       	ldi	r30, 0x80	; 128
     858:	30 d0       	rcall	.+96     	; 0x8ba <__divsf3_pse+0x90>
     85a:	91 50       	subi	r25, 0x01	; 1
     85c:	50 40       	sbci	r21, 0x00	; 0
     85e:	e6 95       	lsr	r30
     860:	00 1c       	adc	r0, r0
     862:	ca f7       	brpl	.-14     	; 0x856 <__divsf3_pse+0x2c>
     864:	29 d0       	rcall	.+82     	; 0x8b8 <__divsf3_pse+0x8e>
     866:	fe 2f       	mov	r31, r30
     868:	27 d0       	rcall	.+78     	; 0x8b8 <__divsf3_pse+0x8e>
     86a:	66 0f       	add	r22, r22
     86c:	77 1f       	adc	r23, r23
     86e:	88 1f       	adc	r24, r24
     870:	bb 1f       	adc	r27, r27
     872:	26 17       	cp	r18, r22
     874:	37 07       	cpc	r19, r23
     876:	48 07       	cpc	r20, r24
     878:	ab 07       	cpc	r26, r27
     87a:	b0 e8       	ldi	r27, 0x80	; 128
     87c:	09 f0       	breq	.+2      	; 0x880 <__divsf3_pse+0x56>
     87e:	bb 0b       	sbc	r27, r27
     880:	80 2d       	mov	r24, r0
     882:	bf 01       	movw	r22, r30
     884:	ff 27       	eor	r31, r31
     886:	93 58       	subi	r25, 0x83	; 131
     888:	5f 4f       	sbci	r21, 0xFF	; 255
     88a:	2a f0       	brmi	.+10     	; 0x896 <__divsf3_pse+0x6c>
     88c:	9e 3f       	cpi	r25, 0xFE	; 254
     88e:	51 05       	cpc	r21, r1
     890:	68 f0       	brcs	.+26     	; 0x8ac <__divsf3_pse+0x82>
     892:	61 c0       	rjmp	.+194    	; 0x956 <__fp_inf>
     894:	ab c0       	rjmp	.+342    	; 0x9ec <__fp_szero>
     896:	5f 3f       	cpi	r21, 0xFF	; 255
     898:	ec f3       	brlt	.-6      	; 0x894 <__divsf3_pse+0x6a>
     89a:	98 3e       	cpi	r25, 0xE8	; 232
     89c:	dc f3       	brlt	.-10     	; 0x894 <__divsf3_pse+0x6a>
     89e:	86 95       	lsr	r24
     8a0:	77 95       	ror	r23
     8a2:	67 95       	ror	r22
     8a4:	b7 95       	ror	r27
     8a6:	f7 95       	ror	r31
     8a8:	9f 5f       	subi	r25, 0xFF	; 255
     8aa:	c9 f7       	brne	.-14     	; 0x89e <__divsf3_pse+0x74>
     8ac:	88 0f       	add	r24, r24
     8ae:	91 1d       	adc	r25, r1
     8b0:	96 95       	lsr	r25
     8b2:	87 95       	ror	r24
     8b4:	97 f9       	bld	r25, 7
     8b6:	08 95       	ret
     8b8:	e1 e0       	ldi	r30, 0x01	; 1
     8ba:	66 0f       	add	r22, r22
     8bc:	77 1f       	adc	r23, r23
     8be:	88 1f       	adc	r24, r24
     8c0:	bb 1f       	adc	r27, r27
     8c2:	62 17       	cp	r22, r18
     8c4:	73 07       	cpc	r23, r19
     8c6:	84 07       	cpc	r24, r20
     8c8:	ba 07       	cpc	r27, r26
     8ca:	20 f0       	brcs	.+8      	; 0x8d4 <__divsf3_pse+0xaa>
     8cc:	62 1b       	sub	r22, r18
     8ce:	73 0b       	sbc	r23, r19
     8d0:	84 0b       	sbc	r24, r20
     8d2:	ba 0b       	sbc	r27, r26
     8d4:	ee 1f       	adc	r30, r30
     8d6:	88 f7       	brcc	.-30     	; 0x8ba <__divsf3_pse+0x90>
     8d8:	e0 95       	com	r30
     8da:	08 95       	ret

000008dc <__floatunsisf>:
     8dc:	e8 94       	clt
     8de:	09 c0       	rjmp	.+18     	; 0x8f2 <__floatsisf+0x12>

000008e0 <__floatsisf>:
     8e0:	97 fb       	bst	r25, 7
     8e2:	3e f4       	brtc	.+14     	; 0x8f2 <__floatsisf+0x12>
     8e4:	90 95       	com	r25
     8e6:	80 95       	com	r24
     8e8:	70 95       	com	r23
     8ea:	61 95       	neg	r22
     8ec:	7f 4f       	sbci	r23, 0xFF	; 255
     8ee:	8f 4f       	sbci	r24, 0xFF	; 255
     8f0:	9f 4f       	sbci	r25, 0xFF	; 255
     8f2:	99 23       	and	r25, r25
     8f4:	a9 f0       	breq	.+42     	; 0x920 <__floatsisf+0x40>
     8f6:	f9 2f       	mov	r31, r25
     8f8:	96 e9       	ldi	r25, 0x96	; 150
     8fa:	bb 27       	eor	r27, r27
     8fc:	93 95       	inc	r25
     8fe:	f6 95       	lsr	r31
     900:	87 95       	ror	r24
     902:	77 95       	ror	r23
     904:	67 95       	ror	r22
     906:	b7 95       	ror	r27
     908:	f1 11       	cpse	r31, r1
     90a:	f8 cf       	rjmp	.-16     	; 0x8fc <__floatsisf+0x1c>
     90c:	fa f4       	brpl	.+62     	; 0x94c <__floatsisf+0x6c>
     90e:	bb 0f       	add	r27, r27
     910:	11 f4       	brne	.+4      	; 0x916 <__floatsisf+0x36>
     912:	60 ff       	sbrs	r22, 0
     914:	1b c0       	rjmp	.+54     	; 0x94c <__floatsisf+0x6c>
     916:	6f 5f       	subi	r22, 0xFF	; 255
     918:	7f 4f       	sbci	r23, 0xFF	; 255
     91a:	8f 4f       	sbci	r24, 0xFF	; 255
     91c:	9f 4f       	sbci	r25, 0xFF	; 255
     91e:	16 c0       	rjmp	.+44     	; 0x94c <__floatsisf+0x6c>
     920:	88 23       	and	r24, r24
     922:	11 f0       	breq	.+4      	; 0x928 <__floatsisf+0x48>
     924:	96 e9       	ldi	r25, 0x96	; 150
     926:	11 c0       	rjmp	.+34     	; 0x94a <__floatsisf+0x6a>
     928:	77 23       	and	r23, r23
     92a:	21 f0       	breq	.+8      	; 0x934 <__floatsisf+0x54>
     92c:	9e e8       	ldi	r25, 0x8E	; 142
     92e:	87 2f       	mov	r24, r23
     930:	76 2f       	mov	r23, r22
     932:	05 c0       	rjmp	.+10     	; 0x93e <__floatsisf+0x5e>
     934:	66 23       	and	r22, r22
     936:	71 f0       	breq	.+28     	; 0x954 <__floatsisf+0x74>
     938:	96 e8       	ldi	r25, 0x86	; 134
     93a:	86 2f       	mov	r24, r22
     93c:	70 e0       	ldi	r23, 0x00	; 0
     93e:	60 e0       	ldi	r22, 0x00	; 0
     940:	2a f0       	brmi	.+10     	; 0x94c <__floatsisf+0x6c>
     942:	9a 95       	dec	r25
     944:	66 0f       	add	r22, r22
     946:	77 1f       	adc	r23, r23
     948:	88 1f       	adc	r24, r24
     94a:	da f7       	brpl	.-10     	; 0x942 <__floatsisf+0x62>
     94c:	88 0f       	add	r24, r24
     94e:	96 95       	lsr	r25
     950:	87 95       	ror	r24
     952:	97 f9       	bld	r25, 7
     954:	08 95       	ret

00000956 <__fp_inf>:
     956:	97 f9       	bld	r25, 7
     958:	9f 67       	ori	r25, 0x7F	; 127
     95a:	80 e8       	ldi	r24, 0x80	; 128
     95c:	70 e0       	ldi	r23, 0x00	; 0
     95e:	60 e0       	ldi	r22, 0x00	; 0
     960:	08 95       	ret

00000962 <__fp_nan>:
     962:	9f ef       	ldi	r25, 0xFF	; 255
     964:	80 ec       	ldi	r24, 0xC0	; 192
     966:	08 95       	ret

00000968 <__fp_pscA>:
     968:	00 24       	eor	r0, r0
     96a:	0a 94       	dec	r0
     96c:	16 16       	cp	r1, r22
     96e:	17 06       	cpc	r1, r23
     970:	18 06       	cpc	r1, r24
     972:	09 06       	cpc	r0, r25
     974:	08 95       	ret

00000976 <__fp_pscB>:
     976:	00 24       	eor	r0, r0
     978:	0a 94       	dec	r0
     97a:	12 16       	cp	r1, r18
     97c:	13 06       	cpc	r1, r19
     97e:	14 06       	cpc	r1, r20
     980:	05 06       	cpc	r0, r21
     982:	08 95       	ret

00000984 <__fp_round>:
     984:	09 2e       	mov	r0, r25
     986:	03 94       	inc	r0
     988:	00 0c       	add	r0, r0
     98a:	11 f4       	brne	.+4      	; 0x990 <__fp_round+0xc>
     98c:	88 23       	and	r24, r24
     98e:	52 f0       	brmi	.+20     	; 0x9a4 <__fp_round+0x20>
     990:	bb 0f       	add	r27, r27
     992:	40 f4       	brcc	.+16     	; 0x9a4 <__fp_round+0x20>
     994:	bf 2b       	or	r27, r31
     996:	11 f4       	brne	.+4      	; 0x99c <__fp_round+0x18>
     998:	60 ff       	sbrs	r22, 0
     99a:	04 c0       	rjmp	.+8      	; 0x9a4 <__fp_round+0x20>
     99c:	6f 5f       	subi	r22, 0xFF	; 255
     99e:	7f 4f       	sbci	r23, 0xFF	; 255
     9a0:	8f 4f       	sbci	r24, 0xFF	; 255
     9a2:	9f 4f       	sbci	r25, 0xFF	; 255
     9a4:	08 95       	ret

000009a6 <__fp_split3>:
     9a6:	57 fd       	sbrc	r21, 7
     9a8:	90 58       	subi	r25, 0x80	; 128
     9aa:	44 0f       	add	r20, r20
     9ac:	55 1f       	adc	r21, r21
     9ae:	59 f0       	breq	.+22     	; 0x9c6 <__fp_splitA+0x10>
     9b0:	5f 3f       	cpi	r21, 0xFF	; 255
     9b2:	71 f0       	breq	.+28     	; 0x9d0 <__fp_splitA+0x1a>
     9b4:	47 95       	ror	r20

000009b6 <__fp_splitA>:
     9b6:	88 0f       	add	r24, r24
     9b8:	97 fb       	bst	r25, 7
     9ba:	99 1f       	adc	r25, r25
     9bc:	61 f0       	breq	.+24     	; 0x9d6 <__fp_splitA+0x20>
     9be:	9f 3f       	cpi	r25, 0xFF	; 255
     9c0:	79 f0       	breq	.+30     	; 0x9e0 <__fp_splitA+0x2a>
     9c2:	87 95       	ror	r24
     9c4:	08 95       	ret
     9c6:	12 16       	cp	r1, r18
     9c8:	13 06       	cpc	r1, r19
     9ca:	14 06       	cpc	r1, r20
     9cc:	55 1f       	adc	r21, r21
     9ce:	f2 cf       	rjmp	.-28     	; 0x9b4 <__fp_split3+0xe>
     9d0:	46 95       	lsr	r20
     9d2:	f1 df       	rcall	.-30     	; 0x9b6 <__fp_splitA>
     9d4:	08 c0       	rjmp	.+16     	; 0x9e6 <__fp_splitA+0x30>
     9d6:	16 16       	cp	r1, r22
     9d8:	17 06       	cpc	r1, r23
     9da:	18 06       	cpc	r1, r24
     9dc:	99 1f       	adc	r25, r25
     9de:	f1 cf       	rjmp	.-30     	; 0x9c2 <__fp_splitA+0xc>
     9e0:	86 95       	lsr	r24
     9e2:	71 05       	cpc	r23, r1
     9e4:	61 05       	cpc	r22, r1
     9e6:	08 94       	sec
     9e8:	08 95       	ret

000009ea <__fp_zero>:
     9ea:	e8 94       	clt

000009ec <__fp_szero>:
     9ec:	bb 27       	eor	r27, r27
     9ee:	66 27       	eor	r22, r22
     9f0:	77 27       	eor	r23, r23
     9f2:	cb 01       	movw	r24, r22
     9f4:	97 f9       	bld	r25, 7
     9f6:	08 95       	ret

000009f8 <__mulsf3>:
     9f8:	0b d0       	rcall	.+22     	; 0xa10 <__mulsf3x>
     9fa:	c4 cf       	rjmp	.-120    	; 0x984 <__fp_round>
     9fc:	b5 df       	rcall	.-150    	; 0x968 <__fp_pscA>
     9fe:	28 f0       	brcs	.+10     	; 0xa0a <__mulsf3+0x12>
     a00:	ba df       	rcall	.-140    	; 0x976 <__fp_pscB>
     a02:	18 f0       	brcs	.+6      	; 0xa0a <__mulsf3+0x12>
     a04:	95 23       	and	r25, r21
     a06:	09 f0       	breq	.+2      	; 0xa0a <__mulsf3+0x12>
     a08:	a6 cf       	rjmp	.-180    	; 0x956 <__fp_inf>
     a0a:	ab cf       	rjmp	.-170    	; 0x962 <__fp_nan>
     a0c:	11 24       	eor	r1, r1
     a0e:	ee cf       	rjmp	.-36     	; 0x9ec <__fp_szero>

00000a10 <__mulsf3x>:
     a10:	ca df       	rcall	.-108    	; 0x9a6 <__fp_split3>
     a12:	a0 f3       	brcs	.-24     	; 0x9fc <__mulsf3+0x4>

00000a14 <__mulsf3_pse>:
     a14:	95 9f       	mul	r25, r21
     a16:	d1 f3       	breq	.-12     	; 0xa0c <__mulsf3+0x14>
     a18:	95 0f       	add	r25, r21
     a1a:	50 e0       	ldi	r21, 0x00	; 0
     a1c:	55 1f       	adc	r21, r21
     a1e:	62 9f       	mul	r22, r18
     a20:	f0 01       	movw	r30, r0
     a22:	72 9f       	mul	r23, r18
     a24:	bb 27       	eor	r27, r27
     a26:	f0 0d       	add	r31, r0
     a28:	b1 1d       	adc	r27, r1
     a2a:	63 9f       	mul	r22, r19
     a2c:	aa 27       	eor	r26, r26
     a2e:	f0 0d       	add	r31, r0
     a30:	b1 1d       	adc	r27, r1
     a32:	aa 1f       	adc	r26, r26
     a34:	64 9f       	mul	r22, r20
     a36:	66 27       	eor	r22, r22
     a38:	b0 0d       	add	r27, r0
     a3a:	a1 1d       	adc	r26, r1
     a3c:	66 1f       	adc	r22, r22
     a3e:	82 9f       	mul	r24, r18
     a40:	22 27       	eor	r18, r18
     a42:	b0 0d       	add	r27, r0
     a44:	a1 1d       	adc	r26, r1
     a46:	62 1f       	adc	r22, r18
     a48:	73 9f       	mul	r23, r19
     a4a:	b0 0d       	add	r27, r0
     a4c:	a1 1d       	adc	r26, r1
     a4e:	62 1f       	adc	r22, r18
     a50:	83 9f       	mul	r24, r19
     a52:	a0 0d       	add	r26, r0
     a54:	61 1d       	adc	r22, r1
     a56:	22 1f       	adc	r18, r18
     a58:	74 9f       	mul	r23, r20
     a5a:	33 27       	eor	r19, r19
     a5c:	a0 0d       	add	r26, r0
     a5e:	61 1d       	adc	r22, r1
     a60:	23 1f       	adc	r18, r19
     a62:	84 9f       	mul	r24, r20
     a64:	60 0d       	add	r22, r0
     a66:	21 1d       	adc	r18, r1
     a68:	82 2f       	mov	r24, r18
     a6a:	76 2f       	mov	r23, r22
     a6c:	6a 2f       	mov	r22, r26
     a6e:	11 24       	eor	r1, r1
     a70:	9f 57       	subi	r25, 0x7F	; 127
     a72:	50 40       	sbci	r21, 0x00	; 0
     a74:	8a f0       	brmi	.+34     	; 0xa98 <__mulsf3_pse+0x84>
     a76:	e1 f0       	breq	.+56     	; 0xab0 <__mulsf3_pse+0x9c>
     a78:	88 23       	and	r24, r24
     a7a:	4a f0       	brmi	.+18     	; 0xa8e <__mulsf3_pse+0x7a>
     a7c:	ee 0f       	add	r30, r30
     a7e:	ff 1f       	adc	r31, r31
     a80:	bb 1f       	adc	r27, r27
     a82:	66 1f       	adc	r22, r22
     a84:	77 1f       	adc	r23, r23
     a86:	88 1f       	adc	r24, r24
     a88:	91 50       	subi	r25, 0x01	; 1
     a8a:	50 40       	sbci	r21, 0x00	; 0
     a8c:	a9 f7       	brne	.-22     	; 0xa78 <__mulsf3_pse+0x64>
     a8e:	9e 3f       	cpi	r25, 0xFE	; 254
     a90:	51 05       	cpc	r21, r1
     a92:	70 f0       	brcs	.+28     	; 0xab0 <__mulsf3_pse+0x9c>
     a94:	60 cf       	rjmp	.-320    	; 0x956 <__fp_inf>
     a96:	aa cf       	rjmp	.-172    	; 0x9ec <__fp_szero>
     a98:	5f 3f       	cpi	r21, 0xFF	; 255
     a9a:	ec f3       	brlt	.-6      	; 0xa96 <__mulsf3_pse+0x82>
     a9c:	98 3e       	cpi	r25, 0xE8	; 232
     a9e:	dc f3       	brlt	.-10     	; 0xa96 <__mulsf3_pse+0x82>
     aa0:	86 95       	lsr	r24
     aa2:	77 95       	ror	r23
     aa4:	67 95       	ror	r22
     aa6:	b7 95       	ror	r27
     aa8:	f7 95       	ror	r31
     aaa:	e7 95       	ror	r30
     aac:	9f 5f       	subi	r25, 0xFF	; 255
     aae:	c1 f7       	brne	.-16     	; 0xaa0 <__mulsf3_pse+0x8c>
     ab0:	fe 2b       	or	r31, r30
     ab2:	88 0f       	add	r24, r24
     ab4:	91 1d       	adc	r25, r1
     ab6:	96 95       	lsr	r25
     ab8:	87 95       	ror	r24
     aba:	97 f9       	bld	r25, 7
     abc:	08 95       	ret

00000abe <__divmodhi4>:
     abe:	97 fb       	bst	r25, 7
     ac0:	07 2e       	mov	r0, r23
     ac2:	16 f4       	brtc	.+4      	; 0xac8 <__divmodhi4+0xa>
     ac4:	00 94       	com	r0
     ac6:	06 d0       	rcall	.+12     	; 0xad4 <__divmodhi4_neg1>
     ac8:	77 fd       	sbrc	r23, 7
     aca:	08 d0       	rcall	.+16     	; 0xadc <__divmodhi4_neg2>
     acc:	0b d0       	rcall	.+22     	; 0xae4 <__udivmodhi4>
     ace:	07 fc       	sbrc	r0, 7
     ad0:	05 d0       	rcall	.+10     	; 0xadc <__divmodhi4_neg2>
     ad2:	3e f4       	brtc	.+14     	; 0xae2 <__divmodhi4_exit>

00000ad4 <__divmodhi4_neg1>:
     ad4:	90 95       	com	r25
     ad6:	81 95       	neg	r24
     ad8:	9f 4f       	sbci	r25, 0xFF	; 255
     ada:	08 95       	ret

00000adc <__divmodhi4_neg2>:
     adc:	70 95       	com	r23
     ade:	61 95       	neg	r22
     ae0:	7f 4f       	sbci	r23, 0xFF	; 255

00000ae2 <__divmodhi4_exit>:
     ae2:	08 95       	ret

00000ae4 <__udivmodhi4>:
     ae4:	aa 1b       	sub	r26, r26
     ae6:	bb 1b       	sub	r27, r27
     ae8:	51 e1       	ldi	r21, 0x11	; 17
     aea:	07 c0       	rjmp	.+14     	; 0xafa <__udivmodhi4_ep>

00000aec <__udivmodhi4_loop>:
     aec:	aa 1f       	adc	r26, r26
     aee:	bb 1f       	adc	r27, r27
     af0:	a6 17       	cp	r26, r22
     af2:	b7 07       	cpc	r27, r23
     af4:	10 f0       	brcs	.+4      	; 0xafa <__udivmodhi4_ep>
     af6:	a6 1b       	sub	r26, r22
     af8:	b7 0b       	sbc	r27, r23

00000afa <__udivmodhi4_ep>:
     afa:	88 1f       	adc	r24, r24
     afc:	99 1f       	adc	r25, r25
     afe:	5a 95       	dec	r21
     b00:	a9 f7       	brne	.-22     	; 0xaec <__udivmodhi4_loop>
     b02:	80 95       	com	r24
     b04:	90 95       	com	r25
     b06:	bc 01       	movw	r22, r24
     b08:	cd 01       	movw	r24, r26
     b0a:	08 95       	ret

00000b0c <dtostrf>:
     b0c:	ef 92       	push	r14
     b0e:	0f 93       	push	r16
     b10:	1f 93       	push	r17
     b12:	cf 93       	push	r28
     b14:	df 93       	push	r29
     b16:	e8 01       	movw	r28, r16
     b18:	47 fd       	sbrc	r20, 7
     b1a:	02 c0       	rjmp	.+4      	; 0xb20 <dtostrf+0x14>
     b1c:	34 e0       	ldi	r19, 0x04	; 4
     b1e:	01 c0       	rjmp	.+2      	; 0xb22 <dtostrf+0x16>
     b20:	34 e1       	ldi	r19, 0x14	; 20
     b22:	e4 2f       	mov	r30, r20
     b24:	44 0f       	add	r20, r20
     b26:	ff 0b       	sbc	r31, r31
     b28:	f7 ff       	sbrs	r31, 7
     b2a:	03 c0       	rjmp	.+6      	; 0xb32 <dtostrf+0x26>
     b2c:	f1 95       	neg	r31
     b2e:	e1 95       	neg	r30
     b30:	f1 09       	sbc	r31, r1
     b32:	e3 2e       	mov	r14, r19
     b34:	02 2f       	mov	r16, r18
     b36:	2e 2f       	mov	r18, r30
     b38:	ae 01       	movw	r20, r28
     b3a:	51 d3       	rcall	.+1698   	; 0x11de <dtoa_prf>
     b3c:	ce 01       	movw	r24, r28
     b3e:	df 91       	pop	r29
     b40:	cf 91       	pop	r28
     b42:	1f 91       	pop	r17
     b44:	0f 91       	pop	r16
     b46:	ef 90       	pop	r14
     b48:	08 95       	ret

00000b4a <malloc>:
     b4a:	cf 93       	push	r28
     b4c:	df 93       	push	r29
     b4e:	82 30       	cpi	r24, 0x02	; 2
     b50:	91 05       	cpc	r25, r1
     b52:	10 f4       	brcc	.+4      	; 0xb58 <malloc+0xe>
     b54:	82 e0       	ldi	r24, 0x02	; 2
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	e0 91 75 02 	lds	r30, 0x0275
     b5c:	f0 91 76 02 	lds	r31, 0x0276
     b60:	20 e0       	ldi	r18, 0x00	; 0
     b62:	30 e0       	ldi	r19, 0x00	; 0
     b64:	c0 e0       	ldi	r28, 0x00	; 0
     b66:	d0 e0       	ldi	r29, 0x00	; 0
     b68:	30 97       	sbiw	r30, 0x00	; 0
     b6a:	11 f1       	breq	.+68     	; 0xbb0 <malloc+0x66>
     b6c:	40 81       	ld	r20, Z
     b6e:	51 81       	ldd	r21, Z+1	; 0x01
     b70:	48 17       	cp	r20, r24
     b72:	59 07       	cpc	r21, r25
     b74:	c0 f0       	brcs	.+48     	; 0xba6 <malloc+0x5c>
     b76:	48 17       	cp	r20, r24
     b78:	59 07       	cpc	r21, r25
     b7a:	61 f4       	brne	.+24     	; 0xb94 <malloc+0x4a>
     b7c:	82 81       	ldd	r24, Z+2	; 0x02
     b7e:	93 81       	ldd	r25, Z+3	; 0x03
     b80:	20 97       	sbiw	r28, 0x00	; 0
     b82:	19 f0       	breq	.+6      	; 0xb8a <malloc+0x40>
     b84:	9b 83       	std	Y+3, r25	; 0x03
     b86:	8a 83       	std	Y+2, r24	; 0x02
     b88:	2b c0       	rjmp	.+86     	; 0xbe0 <malloc+0x96>
     b8a:	90 93 76 02 	sts	0x0276, r25
     b8e:	80 93 75 02 	sts	0x0275, r24
     b92:	26 c0       	rjmp	.+76     	; 0xbe0 <malloc+0x96>
     b94:	21 15       	cp	r18, r1
     b96:	31 05       	cpc	r19, r1
     b98:	19 f0       	breq	.+6      	; 0xba0 <malloc+0x56>
     b9a:	42 17       	cp	r20, r18
     b9c:	53 07       	cpc	r21, r19
     b9e:	18 f4       	brcc	.+6      	; 0xba6 <malloc+0x5c>
     ba0:	9a 01       	movw	r18, r20
     ba2:	be 01       	movw	r22, r28
     ba4:	df 01       	movw	r26, r30
     ba6:	ef 01       	movw	r28, r30
     ba8:	02 80       	ldd	r0, Z+2	; 0x02
     baa:	f3 81       	ldd	r31, Z+3	; 0x03
     bac:	e0 2d       	mov	r30, r0
     bae:	dc cf       	rjmp	.-72     	; 0xb68 <malloc+0x1e>
     bb0:	21 15       	cp	r18, r1
     bb2:	31 05       	cpc	r19, r1
     bb4:	09 f1       	breq	.+66     	; 0xbf8 <malloc+0xae>
     bb6:	28 1b       	sub	r18, r24
     bb8:	39 0b       	sbc	r19, r25
     bba:	24 30       	cpi	r18, 0x04	; 4
     bbc:	31 05       	cpc	r19, r1
     bbe:	90 f4       	brcc	.+36     	; 0xbe4 <malloc+0x9a>
     bc0:	12 96       	adiw	r26, 0x02	; 2
     bc2:	8d 91       	ld	r24, X+
     bc4:	9c 91       	ld	r25, X
     bc6:	13 97       	sbiw	r26, 0x03	; 3
     bc8:	61 15       	cp	r22, r1
     bca:	71 05       	cpc	r23, r1
     bcc:	21 f0       	breq	.+8      	; 0xbd6 <malloc+0x8c>
     bce:	fb 01       	movw	r30, r22
     bd0:	93 83       	std	Z+3, r25	; 0x03
     bd2:	82 83       	std	Z+2, r24	; 0x02
     bd4:	04 c0       	rjmp	.+8      	; 0xbde <malloc+0x94>
     bd6:	90 93 76 02 	sts	0x0276, r25
     bda:	80 93 75 02 	sts	0x0275, r24
     bde:	fd 01       	movw	r30, r26
     be0:	32 96       	adiw	r30, 0x02	; 2
     be2:	44 c0       	rjmp	.+136    	; 0xc6c <malloc+0x122>
     be4:	fd 01       	movw	r30, r26
     be6:	e2 0f       	add	r30, r18
     be8:	f3 1f       	adc	r31, r19
     bea:	81 93       	st	Z+, r24
     bec:	91 93       	st	Z+, r25
     bee:	22 50       	subi	r18, 0x02	; 2
     bf0:	31 09       	sbc	r19, r1
     bf2:	2d 93       	st	X+, r18
     bf4:	3c 93       	st	X, r19
     bf6:	3a c0       	rjmp	.+116    	; 0xc6c <malloc+0x122>
     bf8:	20 91 73 02 	lds	r18, 0x0273
     bfc:	30 91 74 02 	lds	r19, 0x0274
     c00:	23 2b       	or	r18, r19
     c02:	41 f4       	brne	.+16     	; 0xc14 <malloc+0xca>
     c04:	20 91 02 02 	lds	r18, 0x0202
     c08:	30 91 03 02 	lds	r19, 0x0203
     c0c:	30 93 74 02 	sts	0x0274, r19
     c10:	20 93 73 02 	sts	0x0273, r18
     c14:	20 91 00 02 	lds	r18, 0x0200
     c18:	30 91 01 02 	lds	r19, 0x0201
     c1c:	21 15       	cp	r18, r1
     c1e:	31 05       	cpc	r19, r1
     c20:	41 f4       	brne	.+16     	; 0xc32 <malloc+0xe8>
     c22:	2d b7       	in	r18, 0x3d	; 61
     c24:	3e b7       	in	r19, 0x3e	; 62
     c26:	40 91 04 02 	lds	r20, 0x0204
     c2a:	50 91 05 02 	lds	r21, 0x0205
     c2e:	24 1b       	sub	r18, r20
     c30:	35 0b       	sbc	r19, r21
     c32:	e0 91 73 02 	lds	r30, 0x0273
     c36:	f0 91 74 02 	lds	r31, 0x0274
     c3a:	e2 17       	cp	r30, r18
     c3c:	f3 07       	cpc	r31, r19
     c3e:	a0 f4       	brcc	.+40     	; 0xc68 <malloc+0x11e>
     c40:	2e 1b       	sub	r18, r30
     c42:	3f 0b       	sbc	r19, r31
     c44:	28 17       	cp	r18, r24
     c46:	39 07       	cpc	r19, r25
     c48:	78 f0       	brcs	.+30     	; 0xc68 <malloc+0x11e>
     c4a:	ac 01       	movw	r20, r24
     c4c:	4e 5f       	subi	r20, 0xFE	; 254
     c4e:	5f 4f       	sbci	r21, 0xFF	; 255
     c50:	24 17       	cp	r18, r20
     c52:	35 07       	cpc	r19, r21
     c54:	48 f0       	brcs	.+18     	; 0xc68 <malloc+0x11e>
     c56:	4e 0f       	add	r20, r30
     c58:	5f 1f       	adc	r21, r31
     c5a:	50 93 74 02 	sts	0x0274, r21
     c5e:	40 93 73 02 	sts	0x0273, r20
     c62:	81 93       	st	Z+, r24
     c64:	91 93       	st	Z+, r25
     c66:	02 c0       	rjmp	.+4      	; 0xc6c <malloc+0x122>
     c68:	e0 e0       	ldi	r30, 0x00	; 0
     c6a:	f0 e0       	ldi	r31, 0x00	; 0
     c6c:	cf 01       	movw	r24, r30
     c6e:	df 91       	pop	r29
     c70:	cf 91       	pop	r28
     c72:	08 95       	ret

00000c74 <free>:
     c74:	0f 93       	push	r16
     c76:	1f 93       	push	r17
     c78:	cf 93       	push	r28
     c7a:	df 93       	push	r29
     c7c:	00 97       	sbiw	r24, 0x00	; 0
     c7e:	09 f4       	brne	.+2      	; 0xc82 <free+0xe>
     c80:	8c c0       	rjmp	.+280    	; 0xd9a <free+0x126>
     c82:	fc 01       	movw	r30, r24
     c84:	32 97       	sbiw	r30, 0x02	; 2
     c86:	13 82       	std	Z+3, r1	; 0x03
     c88:	12 82       	std	Z+2, r1	; 0x02
     c8a:	00 91 75 02 	lds	r16, 0x0275
     c8e:	10 91 76 02 	lds	r17, 0x0276
     c92:	01 15       	cp	r16, r1
     c94:	11 05       	cpc	r17, r1
     c96:	81 f4       	brne	.+32     	; 0xcb8 <free+0x44>
     c98:	20 81       	ld	r18, Z
     c9a:	31 81       	ldd	r19, Z+1	; 0x01
     c9c:	82 0f       	add	r24, r18
     c9e:	93 1f       	adc	r25, r19
     ca0:	20 91 73 02 	lds	r18, 0x0273
     ca4:	30 91 74 02 	lds	r19, 0x0274
     ca8:	28 17       	cp	r18, r24
     caa:	39 07       	cpc	r19, r25
     cac:	79 f5       	brne	.+94     	; 0xd0c <free+0x98>
     cae:	f0 93 74 02 	sts	0x0274, r31
     cb2:	e0 93 73 02 	sts	0x0273, r30
     cb6:	71 c0       	rjmp	.+226    	; 0xd9a <free+0x126>
     cb8:	d8 01       	movw	r26, r16
     cba:	40 e0       	ldi	r20, 0x00	; 0
     cbc:	50 e0       	ldi	r21, 0x00	; 0
     cbe:	ae 17       	cp	r26, r30
     cc0:	bf 07       	cpc	r27, r31
     cc2:	50 f4       	brcc	.+20     	; 0xcd8 <free+0x64>
     cc4:	12 96       	adiw	r26, 0x02	; 2
     cc6:	2d 91       	ld	r18, X+
     cc8:	3c 91       	ld	r19, X
     cca:	13 97       	sbiw	r26, 0x03	; 3
     ccc:	ad 01       	movw	r20, r26
     cce:	21 15       	cp	r18, r1
     cd0:	31 05       	cpc	r19, r1
     cd2:	09 f1       	breq	.+66     	; 0xd16 <free+0xa2>
     cd4:	d9 01       	movw	r26, r18
     cd6:	f3 cf       	rjmp	.-26     	; 0xcbe <free+0x4a>
     cd8:	9d 01       	movw	r18, r26
     cda:	da 01       	movw	r26, r20
     cdc:	33 83       	std	Z+3, r19	; 0x03
     cde:	22 83       	std	Z+2, r18	; 0x02
     ce0:	60 81       	ld	r22, Z
     ce2:	71 81       	ldd	r23, Z+1	; 0x01
     ce4:	86 0f       	add	r24, r22
     ce6:	97 1f       	adc	r25, r23
     ce8:	82 17       	cp	r24, r18
     cea:	93 07       	cpc	r25, r19
     cec:	69 f4       	brne	.+26     	; 0xd08 <free+0x94>
     cee:	ec 01       	movw	r28, r24
     cf0:	28 81       	ld	r18, Y
     cf2:	39 81       	ldd	r19, Y+1	; 0x01
     cf4:	26 0f       	add	r18, r22
     cf6:	37 1f       	adc	r19, r23
     cf8:	2e 5f       	subi	r18, 0xFE	; 254
     cfa:	3f 4f       	sbci	r19, 0xFF	; 255
     cfc:	31 83       	std	Z+1, r19	; 0x01
     cfe:	20 83       	st	Z, r18
     d00:	8a 81       	ldd	r24, Y+2	; 0x02
     d02:	9b 81       	ldd	r25, Y+3	; 0x03
     d04:	93 83       	std	Z+3, r25	; 0x03
     d06:	82 83       	std	Z+2, r24	; 0x02
     d08:	45 2b       	or	r20, r21
     d0a:	29 f4       	brne	.+10     	; 0xd16 <free+0xa2>
     d0c:	f0 93 76 02 	sts	0x0276, r31
     d10:	e0 93 75 02 	sts	0x0275, r30
     d14:	42 c0       	rjmp	.+132    	; 0xd9a <free+0x126>
     d16:	13 96       	adiw	r26, 0x03	; 3
     d18:	fc 93       	st	X, r31
     d1a:	ee 93       	st	-X, r30
     d1c:	12 97       	sbiw	r26, 0x02	; 2
     d1e:	ed 01       	movw	r28, r26
     d20:	49 91       	ld	r20, Y+
     d22:	59 91       	ld	r21, Y+
     d24:	9e 01       	movw	r18, r28
     d26:	24 0f       	add	r18, r20
     d28:	35 1f       	adc	r19, r21
     d2a:	e2 17       	cp	r30, r18
     d2c:	f3 07       	cpc	r31, r19
     d2e:	71 f4       	brne	.+28     	; 0xd4c <free+0xd8>
     d30:	80 81       	ld	r24, Z
     d32:	91 81       	ldd	r25, Z+1	; 0x01
     d34:	84 0f       	add	r24, r20
     d36:	95 1f       	adc	r25, r21
     d38:	02 96       	adiw	r24, 0x02	; 2
     d3a:	11 96       	adiw	r26, 0x01	; 1
     d3c:	9c 93       	st	X, r25
     d3e:	8e 93       	st	-X, r24
     d40:	82 81       	ldd	r24, Z+2	; 0x02
     d42:	93 81       	ldd	r25, Z+3	; 0x03
     d44:	13 96       	adiw	r26, 0x03	; 3
     d46:	9c 93       	st	X, r25
     d48:	8e 93       	st	-X, r24
     d4a:	12 97       	sbiw	r26, 0x02	; 2
     d4c:	e0 e0       	ldi	r30, 0x00	; 0
     d4e:	f0 e0       	ldi	r31, 0x00	; 0
     d50:	d8 01       	movw	r26, r16
     d52:	12 96       	adiw	r26, 0x02	; 2
     d54:	8d 91       	ld	r24, X+
     d56:	9c 91       	ld	r25, X
     d58:	13 97       	sbiw	r26, 0x03	; 3
     d5a:	00 97       	sbiw	r24, 0x00	; 0
     d5c:	19 f0       	breq	.+6      	; 0xd64 <free+0xf0>
     d5e:	f8 01       	movw	r30, r16
     d60:	8c 01       	movw	r16, r24
     d62:	f6 cf       	rjmp	.-20     	; 0xd50 <free+0xdc>
     d64:	8d 91       	ld	r24, X+
     d66:	9c 91       	ld	r25, X
     d68:	98 01       	movw	r18, r16
     d6a:	2e 5f       	subi	r18, 0xFE	; 254
     d6c:	3f 4f       	sbci	r19, 0xFF	; 255
     d6e:	82 0f       	add	r24, r18
     d70:	93 1f       	adc	r25, r19
     d72:	20 91 73 02 	lds	r18, 0x0273
     d76:	30 91 74 02 	lds	r19, 0x0274
     d7a:	28 17       	cp	r18, r24
     d7c:	39 07       	cpc	r19, r25
     d7e:	69 f4       	brne	.+26     	; 0xd9a <free+0x126>
     d80:	30 97       	sbiw	r30, 0x00	; 0
     d82:	29 f4       	brne	.+10     	; 0xd8e <free+0x11a>
     d84:	10 92 76 02 	sts	0x0276, r1
     d88:	10 92 75 02 	sts	0x0275, r1
     d8c:	02 c0       	rjmp	.+4      	; 0xd92 <free+0x11e>
     d8e:	13 82       	std	Z+3, r1	; 0x03
     d90:	12 82       	std	Z+2, r1	; 0x02
     d92:	10 93 74 02 	sts	0x0274, r17
     d96:	00 93 73 02 	sts	0x0273, r16
     d9a:	df 91       	pop	r29
     d9c:	cf 91       	pop	r28
     d9e:	1f 91       	pop	r17
     da0:	0f 91       	pop	r16
     da2:	08 95       	ret

00000da4 <sprintf>:
     da4:	0f 93       	push	r16
     da6:	1f 93       	push	r17
     da8:	cf 93       	push	r28
     daa:	df 93       	push	r29
     dac:	cd b7       	in	r28, 0x3d	; 61
     dae:	de b7       	in	r29, 0x3e	; 62
     db0:	2e 97       	sbiw	r28, 0x0e	; 14
     db2:	0f b6       	in	r0, 0x3f	; 63
     db4:	f8 94       	cli
     db6:	de bf       	out	0x3e, r29	; 62
     db8:	0f be       	out	0x3f, r0	; 63
     dba:	cd bf       	out	0x3d, r28	; 61
     dbc:	0e 89       	ldd	r16, Y+22	; 0x16
     dbe:	1f 89       	ldd	r17, Y+23	; 0x17
     dc0:	86 e0       	ldi	r24, 0x06	; 6
     dc2:	8c 83       	std	Y+4, r24	; 0x04
     dc4:	1a 83       	std	Y+2, r17	; 0x02
     dc6:	09 83       	std	Y+1, r16	; 0x01
     dc8:	8f ef       	ldi	r24, 0xFF	; 255
     dca:	9f e7       	ldi	r25, 0x7F	; 127
     dcc:	9e 83       	std	Y+6, r25	; 0x06
     dce:	8d 83       	std	Y+5, r24	; 0x05
     dd0:	ae 01       	movw	r20, r28
     dd2:	46 5e       	subi	r20, 0xE6	; 230
     dd4:	5f 4f       	sbci	r21, 0xFF	; 255
     dd6:	68 8d       	ldd	r22, Y+24	; 0x18
     dd8:	79 8d       	ldd	r23, Y+25	; 0x19
     dda:	ce 01       	movw	r24, r28
     ddc:	01 96       	adiw	r24, 0x01	; 1
     dde:	11 d0       	rcall	.+34     	; 0xe02 <vfprintf>
     de0:	2f 81       	ldd	r18, Y+7	; 0x07
     de2:	38 85       	ldd	r19, Y+8	; 0x08
     de4:	f8 01       	movw	r30, r16
     de6:	e2 0f       	add	r30, r18
     de8:	f3 1f       	adc	r31, r19
     dea:	10 82       	st	Z, r1
     dec:	2e 96       	adiw	r28, 0x0e	; 14
     dee:	0f b6       	in	r0, 0x3f	; 63
     df0:	f8 94       	cli
     df2:	de bf       	out	0x3e, r29	; 62
     df4:	0f be       	out	0x3f, r0	; 63
     df6:	cd bf       	out	0x3d, r28	; 61
     df8:	df 91       	pop	r29
     dfa:	cf 91       	pop	r28
     dfc:	1f 91       	pop	r17
     dfe:	0f 91       	pop	r16
     e00:	08 95       	ret

00000e02 <vfprintf>:
     e02:	2f 92       	push	r2
     e04:	3f 92       	push	r3
     e06:	4f 92       	push	r4
     e08:	5f 92       	push	r5
     e0a:	6f 92       	push	r6
     e0c:	7f 92       	push	r7
     e0e:	8f 92       	push	r8
     e10:	9f 92       	push	r9
     e12:	af 92       	push	r10
     e14:	bf 92       	push	r11
     e16:	cf 92       	push	r12
     e18:	df 92       	push	r13
     e1a:	ef 92       	push	r14
     e1c:	ff 92       	push	r15
     e1e:	0f 93       	push	r16
     e20:	1f 93       	push	r17
     e22:	cf 93       	push	r28
     e24:	df 93       	push	r29
     e26:	cd b7       	in	r28, 0x3d	; 61
     e28:	de b7       	in	r29, 0x3e	; 62
     e2a:	2c 97       	sbiw	r28, 0x0c	; 12
     e2c:	0f b6       	in	r0, 0x3f	; 63
     e2e:	f8 94       	cli
     e30:	de bf       	out	0x3e, r29	; 62
     e32:	0f be       	out	0x3f, r0	; 63
     e34:	cd bf       	out	0x3d, r28	; 61
     e36:	7c 01       	movw	r14, r24
     e38:	6b 01       	movw	r12, r22
     e3a:	8a 01       	movw	r16, r20
     e3c:	fc 01       	movw	r30, r24
     e3e:	17 82       	std	Z+7, r1	; 0x07
     e40:	16 82       	std	Z+6, r1	; 0x06
     e42:	83 81       	ldd	r24, Z+3	; 0x03
     e44:	81 ff       	sbrs	r24, 1
     e46:	b0 c1       	rjmp	.+864    	; 0x11a8 <vfprintf+0x3a6>
     e48:	ce 01       	movw	r24, r28
     e4a:	01 96       	adiw	r24, 0x01	; 1
     e4c:	4c 01       	movw	r8, r24
     e4e:	f7 01       	movw	r30, r14
     e50:	93 81       	ldd	r25, Z+3	; 0x03
     e52:	f6 01       	movw	r30, r12
     e54:	93 fd       	sbrc	r25, 3
     e56:	85 91       	lpm	r24, Z+
     e58:	93 ff       	sbrs	r25, 3
     e5a:	81 91       	ld	r24, Z+
     e5c:	6f 01       	movw	r12, r30
     e5e:	88 23       	and	r24, r24
     e60:	09 f4       	brne	.+2      	; 0xe64 <vfprintf+0x62>
     e62:	9e c1       	rjmp	.+828    	; 0x11a0 <vfprintf+0x39e>
     e64:	85 32       	cpi	r24, 0x25	; 37
     e66:	39 f4       	brne	.+14     	; 0xe76 <vfprintf+0x74>
     e68:	93 fd       	sbrc	r25, 3
     e6a:	85 91       	lpm	r24, Z+
     e6c:	93 ff       	sbrs	r25, 3
     e6e:	81 91       	ld	r24, Z+
     e70:	6f 01       	movw	r12, r30
     e72:	85 32       	cpi	r24, 0x25	; 37
     e74:	21 f4       	brne	.+8      	; 0xe7e <vfprintf+0x7c>
     e76:	b7 01       	movw	r22, r14
     e78:	90 e0       	ldi	r25, 0x00	; 0
     e7a:	2c d4       	rcall	.+2136   	; 0x16d4 <fputc>
     e7c:	e8 cf       	rjmp	.-48     	; 0xe4e <vfprintf+0x4c>
     e7e:	51 2c       	mov	r5, r1
     e80:	31 2c       	mov	r3, r1
     e82:	20 e0       	ldi	r18, 0x00	; 0
     e84:	20 32       	cpi	r18, 0x20	; 32
     e86:	a0 f4       	brcc	.+40     	; 0xeb0 <vfprintf+0xae>
     e88:	8b 32       	cpi	r24, 0x2B	; 43
     e8a:	69 f0       	breq	.+26     	; 0xea6 <vfprintf+0xa4>
     e8c:	30 f4       	brcc	.+12     	; 0xe9a <vfprintf+0x98>
     e8e:	80 32       	cpi	r24, 0x20	; 32
     e90:	59 f0       	breq	.+22     	; 0xea8 <vfprintf+0xa6>
     e92:	83 32       	cpi	r24, 0x23	; 35
     e94:	69 f4       	brne	.+26     	; 0xeb0 <vfprintf+0xae>
     e96:	20 61       	ori	r18, 0x10	; 16
     e98:	2c c0       	rjmp	.+88     	; 0xef2 <vfprintf+0xf0>
     e9a:	8d 32       	cpi	r24, 0x2D	; 45
     e9c:	39 f0       	breq	.+14     	; 0xeac <vfprintf+0xaa>
     e9e:	80 33       	cpi	r24, 0x30	; 48
     ea0:	39 f4       	brne	.+14     	; 0xeb0 <vfprintf+0xae>
     ea2:	21 60       	ori	r18, 0x01	; 1
     ea4:	26 c0       	rjmp	.+76     	; 0xef2 <vfprintf+0xf0>
     ea6:	22 60       	ori	r18, 0x02	; 2
     ea8:	24 60       	ori	r18, 0x04	; 4
     eaa:	23 c0       	rjmp	.+70     	; 0xef2 <vfprintf+0xf0>
     eac:	28 60       	ori	r18, 0x08	; 8
     eae:	21 c0       	rjmp	.+66     	; 0xef2 <vfprintf+0xf0>
     eb0:	27 fd       	sbrc	r18, 7
     eb2:	27 c0       	rjmp	.+78     	; 0xf02 <vfprintf+0x100>
     eb4:	30 ed       	ldi	r19, 0xD0	; 208
     eb6:	38 0f       	add	r19, r24
     eb8:	3a 30       	cpi	r19, 0x0A	; 10
     eba:	78 f4       	brcc	.+30     	; 0xeda <vfprintf+0xd8>
     ebc:	26 ff       	sbrs	r18, 6
     ebe:	06 c0       	rjmp	.+12     	; 0xecc <vfprintf+0xca>
     ec0:	fa e0       	ldi	r31, 0x0A	; 10
     ec2:	5f 9e       	mul	r5, r31
     ec4:	30 0d       	add	r19, r0
     ec6:	11 24       	eor	r1, r1
     ec8:	53 2e       	mov	r5, r19
     eca:	13 c0       	rjmp	.+38     	; 0xef2 <vfprintf+0xf0>
     ecc:	8a e0       	ldi	r24, 0x0A	; 10
     ece:	38 9e       	mul	r3, r24
     ed0:	30 0d       	add	r19, r0
     ed2:	11 24       	eor	r1, r1
     ed4:	33 2e       	mov	r3, r19
     ed6:	20 62       	ori	r18, 0x20	; 32
     ed8:	0c c0       	rjmp	.+24     	; 0xef2 <vfprintf+0xf0>
     eda:	8e 32       	cpi	r24, 0x2E	; 46
     edc:	21 f4       	brne	.+8      	; 0xee6 <vfprintf+0xe4>
     ede:	26 fd       	sbrc	r18, 6
     ee0:	5f c1       	rjmp	.+702    	; 0x11a0 <vfprintf+0x39e>
     ee2:	20 64       	ori	r18, 0x40	; 64
     ee4:	06 c0       	rjmp	.+12     	; 0xef2 <vfprintf+0xf0>
     ee6:	8c 36       	cpi	r24, 0x6C	; 108
     ee8:	11 f4       	brne	.+4      	; 0xeee <vfprintf+0xec>
     eea:	20 68       	ori	r18, 0x80	; 128
     eec:	02 c0       	rjmp	.+4      	; 0xef2 <vfprintf+0xf0>
     eee:	88 36       	cpi	r24, 0x68	; 104
     ef0:	41 f4       	brne	.+16     	; 0xf02 <vfprintf+0x100>
     ef2:	f6 01       	movw	r30, r12
     ef4:	93 fd       	sbrc	r25, 3
     ef6:	85 91       	lpm	r24, Z+
     ef8:	93 ff       	sbrs	r25, 3
     efa:	81 91       	ld	r24, Z+
     efc:	6f 01       	movw	r12, r30
     efe:	81 11       	cpse	r24, r1
     f00:	c1 cf       	rjmp	.-126    	; 0xe84 <vfprintf+0x82>
     f02:	98 2f       	mov	r25, r24
     f04:	9f 7d       	andi	r25, 0xDF	; 223
     f06:	95 54       	subi	r25, 0x45	; 69
     f08:	93 30       	cpi	r25, 0x03	; 3
     f0a:	28 f4       	brcc	.+10     	; 0xf16 <vfprintf+0x114>
     f0c:	0c 5f       	subi	r16, 0xFC	; 252
     f0e:	1f 4f       	sbci	r17, 0xFF	; 255
     f10:	ff e3       	ldi	r31, 0x3F	; 63
     f12:	f9 83       	std	Y+1, r31	; 0x01
     f14:	0d c0       	rjmp	.+26     	; 0xf30 <vfprintf+0x12e>
     f16:	83 36       	cpi	r24, 0x63	; 99
     f18:	31 f0       	breq	.+12     	; 0xf26 <vfprintf+0x124>
     f1a:	83 37       	cpi	r24, 0x73	; 115
     f1c:	71 f0       	breq	.+28     	; 0xf3a <vfprintf+0x138>
     f1e:	83 35       	cpi	r24, 0x53	; 83
     f20:	09 f0       	breq	.+2      	; 0xf24 <vfprintf+0x122>
     f22:	57 c0       	rjmp	.+174    	; 0xfd2 <vfprintf+0x1d0>
     f24:	21 c0       	rjmp	.+66     	; 0xf68 <vfprintf+0x166>
     f26:	f8 01       	movw	r30, r16
     f28:	80 81       	ld	r24, Z
     f2a:	89 83       	std	Y+1, r24	; 0x01
     f2c:	0e 5f       	subi	r16, 0xFE	; 254
     f2e:	1f 4f       	sbci	r17, 0xFF	; 255
     f30:	44 24       	eor	r4, r4
     f32:	43 94       	inc	r4
     f34:	51 2c       	mov	r5, r1
     f36:	54 01       	movw	r10, r8
     f38:	14 c0       	rjmp	.+40     	; 0xf62 <vfprintf+0x160>
     f3a:	38 01       	movw	r6, r16
     f3c:	f2 e0       	ldi	r31, 0x02	; 2
     f3e:	6f 0e       	add	r6, r31
     f40:	71 1c       	adc	r7, r1
     f42:	f8 01       	movw	r30, r16
     f44:	a0 80       	ld	r10, Z
     f46:	b1 80       	ldd	r11, Z+1	; 0x01
     f48:	26 ff       	sbrs	r18, 6
     f4a:	03 c0       	rjmp	.+6      	; 0xf52 <vfprintf+0x150>
     f4c:	65 2d       	mov	r22, r5
     f4e:	70 e0       	ldi	r23, 0x00	; 0
     f50:	02 c0       	rjmp	.+4      	; 0xf56 <vfprintf+0x154>
     f52:	6f ef       	ldi	r22, 0xFF	; 255
     f54:	7f ef       	ldi	r23, 0xFF	; 255
     f56:	c5 01       	movw	r24, r10
     f58:	2c 87       	std	Y+12, r18	; 0x0c
     f5a:	b1 d3       	rcall	.+1890   	; 0x16be <strnlen>
     f5c:	2c 01       	movw	r4, r24
     f5e:	83 01       	movw	r16, r6
     f60:	2c 85       	ldd	r18, Y+12	; 0x0c
     f62:	2f 77       	andi	r18, 0x7F	; 127
     f64:	22 2e       	mov	r2, r18
     f66:	16 c0       	rjmp	.+44     	; 0xf94 <vfprintf+0x192>
     f68:	38 01       	movw	r6, r16
     f6a:	f2 e0       	ldi	r31, 0x02	; 2
     f6c:	6f 0e       	add	r6, r31
     f6e:	71 1c       	adc	r7, r1
     f70:	f8 01       	movw	r30, r16
     f72:	a0 80       	ld	r10, Z
     f74:	b1 80       	ldd	r11, Z+1	; 0x01
     f76:	26 ff       	sbrs	r18, 6
     f78:	03 c0       	rjmp	.+6      	; 0xf80 <vfprintf+0x17e>
     f7a:	65 2d       	mov	r22, r5
     f7c:	70 e0       	ldi	r23, 0x00	; 0
     f7e:	02 c0       	rjmp	.+4      	; 0xf84 <vfprintf+0x182>
     f80:	6f ef       	ldi	r22, 0xFF	; 255
     f82:	7f ef       	ldi	r23, 0xFF	; 255
     f84:	c5 01       	movw	r24, r10
     f86:	2c 87       	std	Y+12, r18	; 0x0c
     f88:	8f d3       	rcall	.+1822   	; 0x16a8 <strnlen_P>
     f8a:	2c 01       	movw	r4, r24
     f8c:	2c 85       	ldd	r18, Y+12	; 0x0c
     f8e:	20 68       	ori	r18, 0x80	; 128
     f90:	22 2e       	mov	r2, r18
     f92:	83 01       	movw	r16, r6
     f94:	23 fc       	sbrc	r2, 3
     f96:	19 c0       	rjmp	.+50     	; 0xfca <vfprintf+0x1c8>
     f98:	83 2d       	mov	r24, r3
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	48 16       	cp	r4, r24
     f9e:	59 06       	cpc	r5, r25
     fa0:	a0 f4       	brcc	.+40     	; 0xfca <vfprintf+0x1c8>
     fa2:	b7 01       	movw	r22, r14
     fa4:	80 e2       	ldi	r24, 0x20	; 32
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	95 d3       	rcall	.+1834   	; 0x16d4 <fputc>
     faa:	3a 94       	dec	r3
     fac:	f5 cf       	rjmp	.-22     	; 0xf98 <vfprintf+0x196>
     fae:	f5 01       	movw	r30, r10
     fb0:	27 fc       	sbrc	r2, 7
     fb2:	85 91       	lpm	r24, Z+
     fb4:	27 fe       	sbrs	r2, 7
     fb6:	81 91       	ld	r24, Z+
     fb8:	5f 01       	movw	r10, r30
     fba:	b7 01       	movw	r22, r14
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	8a d3       	rcall	.+1812   	; 0x16d4 <fputc>
     fc0:	31 10       	cpse	r3, r1
     fc2:	3a 94       	dec	r3
     fc4:	f1 e0       	ldi	r31, 0x01	; 1
     fc6:	4f 1a       	sub	r4, r31
     fc8:	51 08       	sbc	r5, r1
     fca:	41 14       	cp	r4, r1
     fcc:	51 04       	cpc	r5, r1
     fce:	79 f7       	brne	.-34     	; 0xfae <vfprintf+0x1ac>
     fd0:	de c0       	rjmp	.+444    	; 0x118e <vfprintf+0x38c>
     fd2:	84 36       	cpi	r24, 0x64	; 100
     fd4:	11 f0       	breq	.+4      	; 0xfda <vfprintf+0x1d8>
     fd6:	89 36       	cpi	r24, 0x69	; 105
     fd8:	31 f5       	brne	.+76     	; 0x1026 <vfprintf+0x224>
     fda:	f8 01       	movw	r30, r16
     fdc:	27 ff       	sbrs	r18, 7
     fde:	07 c0       	rjmp	.+14     	; 0xfee <vfprintf+0x1ec>
     fe0:	60 81       	ld	r22, Z
     fe2:	71 81       	ldd	r23, Z+1	; 0x01
     fe4:	82 81       	ldd	r24, Z+2	; 0x02
     fe6:	93 81       	ldd	r25, Z+3	; 0x03
     fe8:	0c 5f       	subi	r16, 0xFC	; 252
     fea:	1f 4f       	sbci	r17, 0xFF	; 255
     fec:	08 c0       	rjmp	.+16     	; 0xffe <vfprintf+0x1fc>
     fee:	60 81       	ld	r22, Z
     ff0:	71 81       	ldd	r23, Z+1	; 0x01
     ff2:	07 2e       	mov	r0, r23
     ff4:	00 0c       	add	r0, r0
     ff6:	88 0b       	sbc	r24, r24
     ff8:	99 0b       	sbc	r25, r25
     ffa:	0e 5f       	subi	r16, 0xFE	; 254
     ffc:	1f 4f       	sbci	r17, 0xFF	; 255
     ffe:	2f 76       	andi	r18, 0x6F	; 111
    1000:	72 2e       	mov	r7, r18
    1002:	97 ff       	sbrs	r25, 7
    1004:	09 c0       	rjmp	.+18     	; 0x1018 <vfprintf+0x216>
    1006:	90 95       	com	r25
    1008:	80 95       	com	r24
    100a:	70 95       	com	r23
    100c:	61 95       	neg	r22
    100e:	7f 4f       	sbci	r23, 0xFF	; 255
    1010:	8f 4f       	sbci	r24, 0xFF	; 255
    1012:	9f 4f       	sbci	r25, 0xFF	; 255
    1014:	20 68       	ori	r18, 0x80	; 128
    1016:	72 2e       	mov	r7, r18
    1018:	2a e0       	ldi	r18, 0x0A	; 10
    101a:	30 e0       	ldi	r19, 0x00	; 0
    101c:	a4 01       	movw	r20, r8
    101e:	92 d3       	rcall	.+1828   	; 0x1744 <__ultoa_invert>
    1020:	a8 2e       	mov	r10, r24
    1022:	a8 18       	sub	r10, r8
    1024:	43 c0       	rjmp	.+134    	; 0x10ac <vfprintf+0x2aa>
    1026:	85 37       	cpi	r24, 0x75	; 117
    1028:	29 f4       	brne	.+10     	; 0x1034 <vfprintf+0x232>
    102a:	2f 7e       	andi	r18, 0xEF	; 239
    102c:	b2 2e       	mov	r11, r18
    102e:	2a e0       	ldi	r18, 0x0A	; 10
    1030:	30 e0       	ldi	r19, 0x00	; 0
    1032:	25 c0       	rjmp	.+74     	; 0x107e <vfprintf+0x27c>
    1034:	f2 2f       	mov	r31, r18
    1036:	f9 7f       	andi	r31, 0xF9	; 249
    1038:	bf 2e       	mov	r11, r31
    103a:	8f 36       	cpi	r24, 0x6F	; 111
    103c:	c1 f0       	breq	.+48     	; 0x106e <vfprintf+0x26c>
    103e:	18 f4       	brcc	.+6      	; 0x1046 <vfprintf+0x244>
    1040:	88 35       	cpi	r24, 0x58	; 88
    1042:	79 f0       	breq	.+30     	; 0x1062 <vfprintf+0x260>
    1044:	ad c0       	rjmp	.+346    	; 0x11a0 <vfprintf+0x39e>
    1046:	80 37       	cpi	r24, 0x70	; 112
    1048:	19 f0       	breq	.+6      	; 0x1050 <vfprintf+0x24e>
    104a:	88 37       	cpi	r24, 0x78	; 120
    104c:	21 f0       	breq	.+8      	; 0x1056 <vfprintf+0x254>
    104e:	a8 c0       	rjmp	.+336    	; 0x11a0 <vfprintf+0x39e>
    1050:	2f 2f       	mov	r18, r31
    1052:	20 61       	ori	r18, 0x10	; 16
    1054:	b2 2e       	mov	r11, r18
    1056:	b4 fe       	sbrs	r11, 4
    1058:	0d c0       	rjmp	.+26     	; 0x1074 <vfprintf+0x272>
    105a:	8b 2d       	mov	r24, r11
    105c:	84 60       	ori	r24, 0x04	; 4
    105e:	b8 2e       	mov	r11, r24
    1060:	09 c0       	rjmp	.+18     	; 0x1074 <vfprintf+0x272>
    1062:	24 ff       	sbrs	r18, 4
    1064:	0a c0       	rjmp	.+20     	; 0x107a <vfprintf+0x278>
    1066:	9f 2f       	mov	r25, r31
    1068:	96 60       	ori	r25, 0x06	; 6
    106a:	b9 2e       	mov	r11, r25
    106c:	06 c0       	rjmp	.+12     	; 0x107a <vfprintf+0x278>
    106e:	28 e0       	ldi	r18, 0x08	; 8
    1070:	30 e0       	ldi	r19, 0x00	; 0
    1072:	05 c0       	rjmp	.+10     	; 0x107e <vfprintf+0x27c>
    1074:	20 e1       	ldi	r18, 0x10	; 16
    1076:	30 e0       	ldi	r19, 0x00	; 0
    1078:	02 c0       	rjmp	.+4      	; 0x107e <vfprintf+0x27c>
    107a:	20 e1       	ldi	r18, 0x10	; 16
    107c:	32 e0       	ldi	r19, 0x02	; 2
    107e:	f8 01       	movw	r30, r16
    1080:	b7 fe       	sbrs	r11, 7
    1082:	07 c0       	rjmp	.+14     	; 0x1092 <vfprintf+0x290>
    1084:	60 81       	ld	r22, Z
    1086:	71 81       	ldd	r23, Z+1	; 0x01
    1088:	82 81       	ldd	r24, Z+2	; 0x02
    108a:	93 81       	ldd	r25, Z+3	; 0x03
    108c:	0c 5f       	subi	r16, 0xFC	; 252
    108e:	1f 4f       	sbci	r17, 0xFF	; 255
    1090:	06 c0       	rjmp	.+12     	; 0x109e <vfprintf+0x29c>
    1092:	60 81       	ld	r22, Z
    1094:	71 81       	ldd	r23, Z+1	; 0x01
    1096:	80 e0       	ldi	r24, 0x00	; 0
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	0e 5f       	subi	r16, 0xFE	; 254
    109c:	1f 4f       	sbci	r17, 0xFF	; 255
    109e:	a4 01       	movw	r20, r8
    10a0:	51 d3       	rcall	.+1698   	; 0x1744 <__ultoa_invert>
    10a2:	a8 2e       	mov	r10, r24
    10a4:	a8 18       	sub	r10, r8
    10a6:	fb 2d       	mov	r31, r11
    10a8:	ff 77       	andi	r31, 0x7F	; 127
    10aa:	7f 2e       	mov	r7, r31
    10ac:	76 fe       	sbrs	r7, 6
    10ae:	0b c0       	rjmp	.+22     	; 0x10c6 <vfprintf+0x2c4>
    10b0:	37 2d       	mov	r19, r7
    10b2:	3e 7f       	andi	r19, 0xFE	; 254
    10b4:	a5 14       	cp	r10, r5
    10b6:	50 f4       	brcc	.+20     	; 0x10cc <vfprintf+0x2ca>
    10b8:	74 fe       	sbrs	r7, 4
    10ba:	0a c0       	rjmp	.+20     	; 0x10d0 <vfprintf+0x2ce>
    10bc:	72 fc       	sbrc	r7, 2
    10be:	08 c0       	rjmp	.+16     	; 0x10d0 <vfprintf+0x2ce>
    10c0:	37 2d       	mov	r19, r7
    10c2:	3e 7e       	andi	r19, 0xEE	; 238
    10c4:	05 c0       	rjmp	.+10     	; 0x10d0 <vfprintf+0x2ce>
    10c6:	ba 2c       	mov	r11, r10
    10c8:	37 2d       	mov	r19, r7
    10ca:	03 c0       	rjmp	.+6      	; 0x10d2 <vfprintf+0x2d0>
    10cc:	ba 2c       	mov	r11, r10
    10ce:	01 c0       	rjmp	.+2      	; 0x10d2 <vfprintf+0x2d0>
    10d0:	b5 2c       	mov	r11, r5
    10d2:	34 ff       	sbrs	r19, 4
    10d4:	0d c0       	rjmp	.+26     	; 0x10f0 <vfprintf+0x2ee>
    10d6:	fe 01       	movw	r30, r28
    10d8:	ea 0d       	add	r30, r10
    10da:	f1 1d       	adc	r31, r1
    10dc:	80 81       	ld	r24, Z
    10de:	80 33       	cpi	r24, 0x30	; 48
    10e0:	11 f4       	brne	.+4      	; 0x10e6 <vfprintf+0x2e4>
    10e2:	39 7e       	andi	r19, 0xE9	; 233
    10e4:	09 c0       	rjmp	.+18     	; 0x10f8 <vfprintf+0x2f6>
    10e6:	32 ff       	sbrs	r19, 2
    10e8:	06 c0       	rjmp	.+12     	; 0x10f6 <vfprintf+0x2f4>
    10ea:	b3 94       	inc	r11
    10ec:	b3 94       	inc	r11
    10ee:	04 c0       	rjmp	.+8      	; 0x10f8 <vfprintf+0x2f6>
    10f0:	83 2f       	mov	r24, r19
    10f2:	86 78       	andi	r24, 0x86	; 134
    10f4:	09 f0       	breq	.+2      	; 0x10f8 <vfprintf+0x2f6>
    10f6:	b3 94       	inc	r11
    10f8:	33 fd       	sbrc	r19, 3
    10fa:	12 c0       	rjmp	.+36     	; 0x1120 <vfprintf+0x31e>
    10fc:	30 ff       	sbrs	r19, 0
    10fe:	06 c0       	rjmp	.+12     	; 0x110c <vfprintf+0x30a>
    1100:	5a 2c       	mov	r5, r10
    1102:	b3 14       	cp	r11, r3
    1104:	18 f4       	brcc	.+6      	; 0x110c <vfprintf+0x30a>
    1106:	53 0c       	add	r5, r3
    1108:	5b 18       	sub	r5, r11
    110a:	b3 2c       	mov	r11, r3
    110c:	b3 14       	cp	r11, r3
    110e:	60 f4       	brcc	.+24     	; 0x1128 <vfprintf+0x326>
    1110:	b7 01       	movw	r22, r14
    1112:	80 e2       	ldi	r24, 0x20	; 32
    1114:	90 e0       	ldi	r25, 0x00	; 0
    1116:	3c 87       	std	Y+12, r19	; 0x0c
    1118:	dd d2       	rcall	.+1466   	; 0x16d4 <fputc>
    111a:	b3 94       	inc	r11
    111c:	3c 85       	ldd	r19, Y+12	; 0x0c
    111e:	f6 cf       	rjmp	.-20     	; 0x110c <vfprintf+0x30a>
    1120:	b3 14       	cp	r11, r3
    1122:	10 f4       	brcc	.+4      	; 0x1128 <vfprintf+0x326>
    1124:	3b 18       	sub	r3, r11
    1126:	01 c0       	rjmp	.+2      	; 0x112a <vfprintf+0x328>
    1128:	31 2c       	mov	r3, r1
    112a:	34 ff       	sbrs	r19, 4
    112c:	11 c0       	rjmp	.+34     	; 0x1150 <vfprintf+0x34e>
    112e:	b7 01       	movw	r22, r14
    1130:	80 e3       	ldi	r24, 0x30	; 48
    1132:	90 e0       	ldi	r25, 0x00	; 0
    1134:	3c 87       	std	Y+12, r19	; 0x0c
    1136:	ce d2       	rcall	.+1436   	; 0x16d4 <fputc>
    1138:	3c 85       	ldd	r19, Y+12	; 0x0c
    113a:	32 ff       	sbrs	r19, 2
    113c:	16 c0       	rjmp	.+44     	; 0x116a <vfprintf+0x368>
    113e:	31 fd       	sbrc	r19, 1
    1140:	03 c0       	rjmp	.+6      	; 0x1148 <vfprintf+0x346>
    1142:	88 e7       	ldi	r24, 0x78	; 120
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	02 c0       	rjmp	.+4      	; 0x114c <vfprintf+0x34a>
    1148:	88 e5       	ldi	r24, 0x58	; 88
    114a:	90 e0       	ldi	r25, 0x00	; 0
    114c:	b7 01       	movw	r22, r14
    114e:	0c c0       	rjmp	.+24     	; 0x1168 <vfprintf+0x366>
    1150:	83 2f       	mov	r24, r19
    1152:	86 78       	andi	r24, 0x86	; 134
    1154:	51 f0       	breq	.+20     	; 0x116a <vfprintf+0x368>
    1156:	31 ff       	sbrs	r19, 1
    1158:	02 c0       	rjmp	.+4      	; 0x115e <vfprintf+0x35c>
    115a:	8b e2       	ldi	r24, 0x2B	; 43
    115c:	01 c0       	rjmp	.+2      	; 0x1160 <vfprintf+0x35e>
    115e:	80 e2       	ldi	r24, 0x20	; 32
    1160:	37 fd       	sbrc	r19, 7
    1162:	8d e2       	ldi	r24, 0x2D	; 45
    1164:	b7 01       	movw	r22, r14
    1166:	90 e0       	ldi	r25, 0x00	; 0
    1168:	b5 d2       	rcall	.+1386   	; 0x16d4 <fputc>
    116a:	a5 14       	cp	r10, r5
    116c:	30 f4       	brcc	.+12     	; 0x117a <vfprintf+0x378>
    116e:	b7 01       	movw	r22, r14
    1170:	80 e3       	ldi	r24, 0x30	; 48
    1172:	90 e0       	ldi	r25, 0x00	; 0
    1174:	af d2       	rcall	.+1374   	; 0x16d4 <fputc>
    1176:	5a 94       	dec	r5
    1178:	f8 cf       	rjmp	.-16     	; 0x116a <vfprintf+0x368>
    117a:	aa 94       	dec	r10
    117c:	f4 01       	movw	r30, r8
    117e:	ea 0d       	add	r30, r10
    1180:	f1 1d       	adc	r31, r1
    1182:	80 81       	ld	r24, Z
    1184:	b7 01       	movw	r22, r14
    1186:	90 e0       	ldi	r25, 0x00	; 0
    1188:	a5 d2       	rcall	.+1354   	; 0x16d4 <fputc>
    118a:	a1 10       	cpse	r10, r1
    118c:	f6 cf       	rjmp	.-20     	; 0x117a <vfprintf+0x378>
    118e:	33 20       	and	r3, r3
    1190:	09 f4       	brne	.+2      	; 0x1194 <vfprintf+0x392>
    1192:	5d ce       	rjmp	.-838    	; 0xe4e <vfprintf+0x4c>
    1194:	b7 01       	movw	r22, r14
    1196:	80 e2       	ldi	r24, 0x20	; 32
    1198:	90 e0       	ldi	r25, 0x00	; 0
    119a:	9c d2       	rcall	.+1336   	; 0x16d4 <fputc>
    119c:	3a 94       	dec	r3
    119e:	f7 cf       	rjmp	.-18     	; 0x118e <vfprintf+0x38c>
    11a0:	f7 01       	movw	r30, r14
    11a2:	86 81       	ldd	r24, Z+6	; 0x06
    11a4:	97 81       	ldd	r25, Z+7	; 0x07
    11a6:	02 c0       	rjmp	.+4      	; 0x11ac <vfprintf+0x3aa>
    11a8:	8f ef       	ldi	r24, 0xFF	; 255
    11aa:	9f ef       	ldi	r25, 0xFF	; 255
    11ac:	2c 96       	adiw	r28, 0x0c	; 12
    11ae:	0f b6       	in	r0, 0x3f	; 63
    11b0:	f8 94       	cli
    11b2:	de bf       	out	0x3e, r29	; 62
    11b4:	0f be       	out	0x3f, r0	; 63
    11b6:	cd bf       	out	0x3d, r28	; 61
    11b8:	df 91       	pop	r29
    11ba:	cf 91       	pop	r28
    11bc:	1f 91       	pop	r17
    11be:	0f 91       	pop	r16
    11c0:	ff 90       	pop	r15
    11c2:	ef 90       	pop	r14
    11c4:	df 90       	pop	r13
    11c6:	cf 90       	pop	r12
    11c8:	bf 90       	pop	r11
    11ca:	af 90       	pop	r10
    11cc:	9f 90       	pop	r9
    11ce:	8f 90       	pop	r8
    11d0:	7f 90       	pop	r7
    11d2:	6f 90       	pop	r6
    11d4:	5f 90       	pop	r5
    11d6:	4f 90       	pop	r4
    11d8:	3f 90       	pop	r3
    11da:	2f 90       	pop	r2
    11dc:	08 95       	ret

000011de <dtoa_prf>:
    11de:	4f 92       	push	r4
    11e0:	5f 92       	push	r5
    11e2:	6f 92       	push	r6
    11e4:	7f 92       	push	r7
    11e6:	9f 92       	push	r9
    11e8:	af 92       	push	r10
    11ea:	bf 92       	push	r11
    11ec:	cf 92       	push	r12
    11ee:	df 92       	push	r13
    11f0:	ef 92       	push	r14
    11f2:	ff 92       	push	r15
    11f4:	0f 93       	push	r16
    11f6:	1f 93       	push	r17
    11f8:	cf 93       	push	r28
    11fa:	df 93       	push	r29
    11fc:	cd b7       	in	r28, 0x3d	; 61
    11fe:	de b7       	in	r29, 0x3e	; 62
    1200:	29 97       	sbiw	r28, 0x09	; 9
    1202:	0f b6       	in	r0, 0x3f	; 63
    1204:	f8 94       	cli
    1206:	de bf       	out	0x3e, r29	; 62
    1208:	0f be       	out	0x3f, r0	; 63
    120a:	cd bf       	out	0x3d, r28	; 61
    120c:	6a 01       	movw	r12, r20
    120e:	12 2f       	mov	r17, r18
    1210:	b0 2e       	mov	r11, r16
    1212:	2b e3       	ldi	r18, 0x3B	; 59
    1214:	20 17       	cp	r18, r16
    1216:	20 f0       	brcs	.+8      	; 0x1220 <dtoa_prf+0x42>
    1218:	ff 24       	eor	r15, r15
    121a:	f3 94       	inc	r15
    121c:	f0 0e       	add	r15, r16
    121e:	02 c0       	rjmp	.+4      	; 0x1224 <dtoa_prf+0x46>
    1220:	bc e3       	ldi	r27, 0x3C	; 60
    1222:	fb 2e       	mov	r15, r27
    1224:	0f 2d       	mov	r16, r15
    1226:	27 e0       	ldi	r18, 0x07	; 7
    1228:	ae 01       	movw	r20, r28
    122a:	4f 5f       	subi	r20, 0xFF	; 255
    122c:	5f 4f       	sbci	r21, 0xFF	; 255
    122e:	64 d1       	rcall	.+712    	; 0x14f8 <__ftoa_engine>
    1230:	ac 01       	movw	r20, r24
    1232:	89 81       	ldd	r24, Y+1	; 0x01
    1234:	98 2f       	mov	r25, r24
    1236:	99 70       	andi	r25, 0x09	; 9
    1238:	91 30       	cpi	r25, 0x01	; 1
    123a:	31 f0       	breq	.+12     	; 0x1248 <dtoa_prf+0x6a>
    123c:	e1 fc       	sbrc	r14, 1
    123e:	06 c0       	rjmp	.+12     	; 0x124c <dtoa_prf+0x6e>
    1240:	e0 fe       	sbrs	r14, 0
    1242:	06 c0       	rjmp	.+12     	; 0x1250 <dtoa_prf+0x72>
    1244:	90 e2       	ldi	r25, 0x20	; 32
    1246:	05 c0       	rjmp	.+10     	; 0x1252 <dtoa_prf+0x74>
    1248:	9d e2       	ldi	r25, 0x2D	; 45
    124a:	03 c0       	rjmp	.+6      	; 0x1252 <dtoa_prf+0x74>
    124c:	9b e2       	ldi	r25, 0x2B	; 43
    124e:	01 c0       	rjmp	.+2      	; 0x1252 <dtoa_prf+0x74>
    1250:	90 e0       	ldi	r25, 0x00	; 0
    1252:	ee 2d       	mov	r30, r14
    1254:	e0 71       	andi	r30, 0x10	; 16
    1256:	83 ff       	sbrs	r24, 3
    1258:	3c c0       	rjmp	.+120    	; 0x12d2 <dtoa_prf+0xf4>
    125a:	91 11       	cpse	r25, r1
    125c:	02 c0       	rjmp	.+4      	; 0x1262 <dtoa_prf+0x84>
    125e:	83 e0       	ldi	r24, 0x03	; 3
    1260:	01 c0       	rjmp	.+2      	; 0x1264 <dtoa_prf+0x86>
    1262:	84 e0       	ldi	r24, 0x04	; 4
    1264:	81 17       	cp	r24, r17
    1266:	18 f4       	brcc	.+6      	; 0x126e <dtoa_prf+0x90>
    1268:	21 2f       	mov	r18, r17
    126a:	28 1b       	sub	r18, r24
    126c:	01 c0       	rjmp	.+2      	; 0x1270 <dtoa_prf+0x92>
    126e:	20 e0       	ldi	r18, 0x00	; 0
    1270:	e1 11       	cpse	r30, r1
    1272:	0b c0       	rjmp	.+22     	; 0x128a <dtoa_prf+0xac>
    1274:	f6 01       	movw	r30, r12
    1276:	82 2f       	mov	r24, r18
    1278:	30 e2       	ldi	r19, 0x20	; 32
    127a:	88 23       	and	r24, r24
    127c:	19 f0       	breq	.+6      	; 0x1284 <dtoa_prf+0xa6>
    127e:	31 93       	st	Z+, r19
    1280:	81 50       	subi	r24, 0x01	; 1
    1282:	fb cf       	rjmp	.-10     	; 0x127a <dtoa_prf+0x9c>
    1284:	c2 0e       	add	r12, r18
    1286:	d1 1c       	adc	r13, r1
    1288:	20 e0       	ldi	r18, 0x00	; 0
    128a:	99 23       	and	r25, r25
    128c:	29 f0       	breq	.+10     	; 0x1298 <dtoa_prf+0xba>
    128e:	d6 01       	movw	r26, r12
    1290:	9c 93       	st	X, r25
    1292:	f6 01       	movw	r30, r12
    1294:	31 96       	adiw	r30, 0x01	; 1
    1296:	6f 01       	movw	r12, r30
    1298:	c6 01       	movw	r24, r12
    129a:	03 96       	adiw	r24, 0x03	; 3
    129c:	e2 fe       	sbrs	r14, 2
    129e:	0a c0       	rjmp	.+20     	; 0x12b4 <dtoa_prf+0xd6>
    12a0:	3e e4       	ldi	r19, 0x4E	; 78
    12a2:	d6 01       	movw	r26, r12
    12a4:	3c 93       	st	X, r19
    12a6:	41 e4       	ldi	r20, 0x41	; 65
    12a8:	11 96       	adiw	r26, 0x01	; 1
    12aa:	4c 93       	st	X, r20
    12ac:	11 97       	sbiw	r26, 0x01	; 1
    12ae:	12 96       	adiw	r26, 0x02	; 2
    12b0:	3c 93       	st	X, r19
    12b2:	06 c0       	rjmp	.+12     	; 0x12c0 <dtoa_prf+0xe2>
    12b4:	3e e6       	ldi	r19, 0x6E	; 110
    12b6:	f6 01       	movw	r30, r12
    12b8:	30 83       	st	Z, r19
    12ba:	41 e6       	ldi	r20, 0x61	; 97
    12bc:	41 83       	std	Z+1, r20	; 0x01
    12be:	32 83       	std	Z+2, r19	; 0x02
    12c0:	fc 01       	movw	r30, r24
    12c2:	32 2f       	mov	r19, r18
    12c4:	40 e2       	ldi	r20, 0x20	; 32
    12c6:	33 23       	and	r19, r19
    12c8:	09 f4       	brne	.+2      	; 0x12cc <dtoa_prf+0xee>
    12ca:	42 c0       	rjmp	.+132    	; 0x1350 <dtoa_prf+0x172>
    12cc:	41 93       	st	Z+, r20
    12ce:	31 50       	subi	r19, 0x01	; 1
    12d0:	fa cf       	rjmp	.-12     	; 0x12c6 <dtoa_prf+0xe8>
    12d2:	82 ff       	sbrs	r24, 2
    12d4:	44 c0       	rjmp	.+136    	; 0x135e <dtoa_prf+0x180>
    12d6:	91 11       	cpse	r25, r1
    12d8:	02 c0       	rjmp	.+4      	; 0x12de <dtoa_prf+0x100>
    12da:	83 e0       	ldi	r24, 0x03	; 3
    12dc:	01 c0       	rjmp	.+2      	; 0x12e0 <dtoa_prf+0x102>
    12de:	84 e0       	ldi	r24, 0x04	; 4
    12e0:	81 17       	cp	r24, r17
    12e2:	18 f4       	brcc	.+6      	; 0x12ea <dtoa_prf+0x10c>
    12e4:	21 2f       	mov	r18, r17
    12e6:	28 1b       	sub	r18, r24
    12e8:	01 c0       	rjmp	.+2      	; 0x12ec <dtoa_prf+0x10e>
    12ea:	20 e0       	ldi	r18, 0x00	; 0
    12ec:	e1 11       	cpse	r30, r1
    12ee:	0b c0       	rjmp	.+22     	; 0x1306 <dtoa_prf+0x128>
    12f0:	f6 01       	movw	r30, r12
    12f2:	82 2f       	mov	r24, r18
    12f4:	30 e2       	ldi	r19, 0x20	; 32
    12f6:	88 23       	and	r24, r24
    12f8:	19 f0       	breq	.+6      	; 0x1300 <dtoa_prf+0x122>
    12fa:	31 93       	st	Z+, r19
    12fc:	81 50       	subi	r24, 0x01	; 1
    12fe:	fb cf       	rjmp	.-10     	; 0x12f6 <dtoa_prf+0x118>
    1300:	c2 0e       	add	r12, r18
    1302:	d1 1c       	adc	r13, r1
    1304:	20 e0       	ldi	r18, 0x00	; 0
    1306:	99 23       	and	r25, r25
    1308:	29 f0       	breq	.+10     	; 0x1314 <dtoa_prf+0x136>
    130a:	d6 01       	movw	r26, r12
    130c:	9c 93       	st	X, r25
    130e:	f6 01       	movw	r30, r12
    1310:	31 96       	adiw	r30, 0x01	; 1
    1312:	6f 01       	movw	r12, r30
    1314:	c6 01       	movw	r24, r12
    1316:	03 96       	adiw	r24, 0x03	; 3
    1318:	e2 fe       	sbrs	r14, 2
    131a:	0b c0       	rjmp	.+22     	; 0x1332 <dtoa_prf+0x154>
    131c:	39 e4       	ldi	r19, 0x49	; 73
    131e:	d6 01       	movw	r26, r12
    1320:	3c 93       	st	X, r19
    1322:	3e e4       	ldi	r19, 0x4E	; 78
    1324:	11 96       	adiw	r26, 0x01	; 1
    1326:	3c 93       	st	X, r19
    1328:	11 97       	sbiw	r26, 0x01	; 1
    132a:	36 e4       	ldi	r19, 0x46	; 70
    132c:	12 96       	adiw	r26, 0x02	; 2
    132e:	3c 93       	st	X, r19
    1330:	07 c0       	rjmp	.+14     	; 0x1340 <dtoa_prf+0x162>
    1332:	39 e6       	ldi	r19, 0x69	; 105
    1334:	f6 01       	movw	r30, r12
    1336:	30 83       	st	Z, r19
    1338:	3e e6       	ldi	r19, 0x6E	; 110
    133a:	31 83       	std	Z+1, r19	; 0x01
    133c:	36 e6       	ldi	r19, 0x66	; 102
    133e:	32 83       	std	Z+2, r19	; 0x02
    1340:	fc 01       	movw	r30, r24
    1342:	32 2f       	mov	r19, r18
    1344:	40 e2       	ldi	r20, 0x20	; 32
    1346:	33 23       	and	r19, r19
    1348:	19 f0       	breq	.+6      	; 0x1350 <dtoa_prf+0x172>
    134a:	41 93       	st	Z+, r20
    134c:	31 50       	subi	r19, 0x01	; 1
    134e:	fb cf       	rjmp	.-10     	; 0x1346 <dtoa_prf+0x168>
    1350:	fc 01       	movw	r30, r24
    1352:	e2 0f       	add	r30, r18
    1354:	f1 1d       	adc	r31, r1
    1356:	10 82       	st	Z, r1
    1358:	8e ef       	ldi	r24, 0xFE	; 254
    135a:	9f ef       	ldi	r25, 0xFF	; 255
    135c:	b7 c0       	rjmp	.+366    	; 0x14cc <dtoa_prf+0x2ee>
    135e:	f1 e0       	ldi	r31, 0x01	; 1
    1360:	91 11       	cpse	r25, r1
    1362:	01 c0       	rjmp	.+2      	; 0x1366 <dtoa_prf+0x188>
    1364:	f0 e0       	ldi	r31, 0x00	; 0
    1366:	6f 2f       	mov	r22, r31
    1368:	70 e0       	ldi	r23, 0x00	; 0
    136a:	14 16       	cp	r1, r20
    136c:	15 06       	cpc	r1, r21
    136e:	24 f4       	brge	.+8      	; 0x1378 <dtoa_prf+0x19a>
    1370:	9a 01       	movw	r18, r20
    1372:	2f 5f       	subi	r18, 0xFF	; 255
    1374:	3f 4f       	sbci	r19, 0xFF	; 255
    1376:	02 c0       	rjmp	.+4      	; 0x137c <dtoa_prf+0x19e>
    1378:	21 e0       	ldi	r18, 0x01	; 1
    137a:	30 e0       	ldi	r19, 0x00	; 0
    137c:	26 0f       	add	r18, r22
    137e:	37 1f       	adc	r19, r23
    1380:	bb 20       	and	r11, r11
    1382:	29 f0       	breq	.+10     	; 0x138e <dtoa_prf+0x1b0>
    1384:	6b 2d       	mov	r22, r11
    1386:	70 e0       	ldi	r23, 0x00	; 0
    1388:	6f 5f       	subi	r22, 0xFF	; 255
    138a:	7f 4f       	sbci	r23, 0xFF	; 255
    138c:	02 c0       	rjmp	.+4      	; 0x1392 <dtoa_prf+0x1b4>
    138e:	60 e0       	ldi	r22, 0x00	; 0
    1390:	70 e0       	ldi	r23, 0x00	; 0
    1392:	26 0f       	add	r18, r22
    1394:	37 1f       	adc	r19, r23
    1396:	61 2f       	mov	r22, r17
    1398:	70 e0       	ldi	r23, 0x00	; 0
    139a:	26 17       	cp	r18, r22
    139c:	37 07       	cpc	r19, r23
    139e:	1c f4       	brge	.+6      	; 0x13a6 <dtoa_prf+0x1c8>
    13a0:	12 1b       	sub	r17, r18
    13a2:	21 2f       	mov	r18, r17
    13a4:	01 c0       	rjmp	.+2      	; 0x13a8 <dtoa_prf+0x1ca>
    13a6:	20 e0       	ldi	r18, 0x00	; 0
    13a8:	3e 2d       	mov	r19, r14
    13aa:	38 71       	andi	r19, 0x18	; 24
    13ac:	59 f4       	brne	.+22     	; 0x13c4 <dtoa_prf+0x1e6>
    13ae:	d6 01       	movw	r26, r12
    13b0:	32 2f       	mov	r19, r18
    13b2:	60 e2       	ldi	r22, 0x20	; 32
    13b4:	33 23       	and	r19, r19
    13b6:	19 f0       	breq	.+6      	; 0x13be <dtoa_prf+0x1e0>
    13b8:	6d 93       	st	X+, r22
    13ba:	31 50       	subi	r19, 0x01	; 1
    13bc:	fb cf       	rjmp	.-10     	; 0x13b4 <dtoa_prf+0x1d6>
    13be:	c2 0e       	add	r12, r18
    13c0:	d1 1c       	adc	r13, r1
    13c2:	20 e0       	ldi	r18, 0x00	; 0
    13c4:	ff 23       	and	r31, r31
    13c6:	31 f0       	breq	.+12     	; 0x13d4 <dtoa_prf+0x1f6>
    13c8:	d6 01       	movw	r26, r12
    13ca:	9c 93       	st	X, r25
    13cc:	b6 01       	movw	r22, r12
    13ce:	6f 5f       	subi	r22, 0xFF	; 255
    13d0:	7f 4f       	sbci	r23, 0xFF	; 255
    13d2:	6b 01       	movw	r12, r22
    13d4:	e1 11       	cpse	r30, r1
    13d6:	0b c0       	rjmp	.+22     	; 0x13ee <dtoa_prf+0x210>
    13d8:	f6 01       	movw	r30, r12
    13da:	92 2f       	mov	r25, r18
    13dc:	30 e3       	ldi	r19, 0x30	; 48
    13de:	99 23       	and	r25, r25
    13e0:	19 f0       	breq	.+6      	; 0x13e8 <dtoa_prf+0x20a>
    13e2:	31 93       	st	Z+, r19
    13e4:	91 50       	subi	r25, 0x01	; 1
    13e6:	fb cf       	rjmp	.-10     	; 0x13de <dtoa_prf+0x200>
    13e8:	c2 0e       	add	r12, r18
    13ea:	d1 1c       	adc	r13, r1
    13ec:	20 e0       	ldi	r18, 0x00	; 0
    13ee:	9f 2d       	mov	r25, r15
    13f0:	94 0f       	add	r25, r20
    13f2:	3a 81       	ldd	r19, Y+2	; 0x02
    13f4:	78 2f       	mov	r23, r24
    13f6:	70 71       	andi	r23, 0x10	; 16
    13f8:	a7 2e       	mov	r10, r23
    13fa:	84 ff       	sbrs	r24, 4
    13fc:	03 c0       	rjmp	.+6      	; 0x1404 <dtoa_prf+0x226>
    13fe:	31 33       	cpi	r19, 0x31	; 49
    1400:	09 f4       	brne	.+2      	; 0x1404 <dtoa_prf+0x226>
    1402:	91 50       	subi	r25, 0x01	; 1
    1404:	19 16       	cp	r1, r25
    1406:	24 f4       	brge	.+8      	; 0x1410 <dtoa_prf+0x232>
    1408:	99 30       	cpi	r25, 0x09	; 9
    140a:	18 f0       	brcs	.+6      	; 0x1412 <dtoa_prf+0x234>
    140c:	98 e0       	ldi	r25, 0x08	; 8
    140e:	01 c0       	rjmp	.+2      	; 0x1412 <dtoa_prf+0x234>
    1410:	91 e0       	ldi	r25, 0x01	; 1
    1412:	e4 2f       	mov	r30, r20
    1414:	85 2f       	mov	r24, r21
    1416:	57 ff       	sbrs	r21, 7
    1418:	02 c0       	rjmp	.+4      	; 0x141e <dtoa_prf+0x240>
    141a:	e0 e0       	ldi	r30, 0x00	; 0
    141c:	80 e0       	ldi	r24, 0x00	; 0
    141e:	6e 2f       	mov	r22, r30
    1420:	78 2f       	mov	r23, r24
    1422:	e0 e0       	ldi	r30, 0x00	; 0
    1424:	f0 e0       	ldi	r31, 0x00	; 0
    1426:	ae e2       	ldi	r26, 0x2E	; 46
    1428:	9a 2e       	mov	r9, r26
    142a:	3a 01       	movw	r6, r20
    142c:	69 1a       	sub	r6, r25
    142e:	71 08       	sbc	r7, r1
    1430:	2a 01       	movw	r4, r20
    1432:	46 1a       	sub	r4, r22
    1434:	57 0a       	sbc	r5, r23
    1436:	0b 2d       	mov	r16, r11
    1438:	10 e0       	ldi	r17, 0x00	; 0
    143a:	11 95       	neg	r17
    143c:	01 95       	neg	r16
    143e:	11 09       	sbc	r17, r1
    1440:	6f 3f       	cpi	r22, 0xFF	; 255
    1442:	8f ef       	ldi	r24, 0xFF	; 255
    1444:	78 07       	cpc	r23, r24
    1446:	29 f4       	brne	.+10     	; 0x1452 <dtoa_prf+0x274>
    1448:	d6 01       	movw	r26, r12
    144a:	9c 92       	st	X, r9
    144c:	c6 01       	movw	r24, r12
    144e:	01 96       	adiw	r24, 0x01	; 1
    1450:	6c 01       	movw	r12, r24
    1452:	46 17       	cp	r20, r22
    1454:	57 07       	cpc	r21, r23
    1456:	84 f0       	brlt	.+32     	; 0x1478 <dtoa_prf+0x29a>
    1458:	66 16       	cp	r6, r22
    145a:	77 06       	cpc	r7, r23
    145c:	6c f4       	brge	.+26     	; 0x1478 <dtoa_prf+0x29a>
    145e:	7f 01       	movw	r14, r30
    1460:	e4 0c       	add	r14, r4
    1462:	f5 1c       	adc	r15, r5
    1464:	a1 e0       	ldi	r26, 0x01	; 1
    1466:	b0 e0       	ldi	r27, 0x00	; 0
    1468:	ac 0f       	add	r26, r28
    146a:	bd 1f       	adc	r27, r29
    146c:	ea 0e       	add	r14, r26
    146e:	fb 1e       	adc	r15, r27
    1470:	d7 01       	movw	r26, r14
    1472:	11 96       	adiw	r26, 0x01	; 1
    1474:	bc 90       	ld	r11, X
    1476:	02 c0       	rjmp	.+4      	; 0x147c <dtoa_prf+0x29e>
    1478:	90 e3       	ldi	r25, 0x30	; 48
    147a:	b9 2e       	mov	r11, r25
    147c:	61 50       	subi	r22, 0x01	; 1
    147e:	71 09       	sbc	r23, r1
    1480:	31 96       	adiw	r30, 0x01	; 1
    1482:	c6 01       	movw	r24, r12
    1484:	01 96       	adiw	r24, 0x01	; 1
    1486:	7c 01       	movw	r14, r24
    1488:	60 17       	cp	r22, r16
    148a:	71 07       	cpc	r23, r17
    148c:	24 f0       	brlt	.+8      	; 0x1496 <dtoa_prf+0x2b8>
    148e:	d6 01       	movw	r26, r12
    1490:	bc 92       	st	X, r11
    1492:	6c 01       	movw	r12, r24
    1494:	d5 cf       	rjmp	.-86     	; 0x1440 <dtoa_prf+0x262>
    1496:	64 17       	cp	r22, r20
    1498:	75 07       	cpc	r23, r21
    149a:	41 f4       	brne	.+16     	; 0x14ac <dtoa_prf+0x2ce>
    149c:	36 33       	cpi	r19, 0x36	; 54
    149e:	20 f4       	brcc	.+8      	; 0x14a8 <dtoa_prf+0x2ca>
    14a0:	35 33       	cpi	r19, 0x35	; 53
    14a2:	21 f4       	brne	.+8      	; 0x14ac <dtoa_prf+0x2ce>
    14a4:	a1 10       	cpse	r10, r1
    14a6:	02 c0       	rjmp	.+4      	; 0x14ac <dtoa_prf+0x2ce>
    14a8:	81 e3       	ldi	r24, 0x31	; 49
    14aa:	b8 2e       	mov	r11, r24
    14ac:	f6 01       	movw	r30, r12
    14ae:	b0 82       	st	Z, r11
    14b0:	f7 01       	movw	r30, r14
    14b2:	82 2f       	mov	r24, r18
    14b4:	90 e2       	ldi	r25, 0x20	; 32
    14b6:	88 23       	and	r24, r24
    14b8:	19 f0       	breq	.+6      	; 0x14c0 <dtoa_prf+0x2e2>
    14ba:	91 93       	st	Z+, r25
    14bc:	81 50       	subi	r24, 0x01	; 1
    14be:	fb cf       	rjmp	.-10     	; 0x14b6 <dtoa_prf+0x2d8>
    14c0:	f7 01       	movw	r30, r14
    14c2:	e2 0f       	add	r30, r18
    14c4:	f1 1d       	adc	r31, r1
    14c6:	10 82       	st	Z, r1
    14c8:	80 e0       	ldi	r24, 0x00	; 0
    14ca:	90 e0       	ldi	r25, 0x00	; 0
    14cc:	29 96       	adiw	r28, 0x09	; 9
    14ce:	0f b6       	in	r0, 0x3f	; 63
    14d0:	f8 94       	cli
    14d2:	de bf       	out	0x3e, r29	; 62
    14d4:	0f be       	out	0x3f, r0	; 63
    14d6:	cd bf       	out	0x3d, r28	; 61
    14d8:	df 91       	pop	r29
    14da:	cf 91       	pop	r28
    14dc:	1f 91       	pop	r17
    14de:	0f 91       	pop	r16
    14e0:	ff 90       	pop	r15
    14e2:	ef 90       	pop	r14
    14e4:	df 90       	pop	r13
    14e6:	cf 90       	pop	r12
    14e8:	bf 90       	pop	r11
    14ea:	af 90       	pop	r10
    14ec:	9f 90       	pop	r9
    14ee:	7f 90       	pop	r7
    14f0:	6f 90       	pop	r6
    14f2:	5f 90       	pop	r5
    14f4:	4f 90       	pop	r4
    14f6:	08 95       	ret

000014f8 <__ftoa_engine>:
    14f8:	28 30       	cpi	r18, 0x08	; 8
    14fa:	08 f0       	brcs	.+2      	; 0x14fe <__ftoa_engine+0x6>
    14fc:	27 e0       	ldi	r18, 0x07	; 7
    14fe:	33 27       	eor	r19, r19
    1500:	da 01       	movw	r26, r20
    1502:	99 0f       	add	r25, r25
    1504:	31 1d       	adc	r19, r1
    1506:	87 fd       	sbrc	r24, 7
    1508:	91 60       	ori	r25, 0x01	; 1
    150a:	00 96       	adiw	r24, 0x00	; 0
    150c:	61 05       	cpc	r22, r1
    150e:	71 05       	cpc	r23, r1
    1510:	39 f4       	brne	.+14     	; 0x1520 <__ftoa_engine+0x28>
    1512:	32 60       	ori	r19, 0x02	; 2
    1514:	2e 5f       	subi	r18, 0xFE	; 254
    1516:	3d 93       	st	X+, r19
    1518:	30 e3       	ldi	r19, 0x30	; 48
    151a:	2a 95       	dec	r18
    151c:	e1 f7       	brne	.-8      	; 0x1516 <__ftoa_engine+0x1e>
    151e:	08 95       	ret
    1520:	9f 3f       	cpi	r25, 0xFF	; 255
    1522:	30 f0       	brcs	.+12     	; 0x1530 <__ftoa_engine+0x38>
    1524:	80 38       	cpi	r24, 0x80	; 128
    1526:	71 05       	cpc	r23, r1
    1528:	61 05       	cpc	r22, r1
    152a:	09 f0       	breq	.+2      	; 0x152e <__ftoa_engine+0x36>
    152c:	3c 5f       	subi	r19, 0xFC	; 252
    152e:	3c 5f       	subi	r19, 0xFC	; 252
    1530:	3d 93       	st	X+, r19
    1532:	91 30       	cpi	r25, 0x01	; 1
    1534:	08 f0       	brcs	.+2      	; 0x1538 <__ftoa_engine+0x40>
    1536:	80 68       	ori	r24, 0x80	; 128
    1538:	91 1d       	adc	r25, r1
    153a:	df 93       	push	r29
    153c:	cf 93       	push	r28
    153e:	1f 93       	push	r17
    1540:	0f 93       	push	r16
    1542:	ff 92       	push	r15
    1544:	ef 92       	push	r14
    1546:	19 2f       	mov	r17, r25
    1548:	98 7f       	andi	r25, 0xF8	; 248
    154a:	96 95       	lsr	r25
    154c:	e9 2f       	mov	r30, r25
    154e:	96 95       	lsr	r25
    1550:	96 95       	lsr	r25
    1552:	e9 0f       	add	r30, r25
    1554:	ff 27       	eor	r31, r31
    1556:	e2 5c       	subi	r30, 0xC2	; 194
    1558:	fe 4f       	sbci	r31, 0xFE	; 254
    155a:	99 27       	eor	r25, r25
    155c:	33 27       	eor	r19, r19
    155e:	ee 24       	eor	r14, r14
    1560:	ff 24       	eor	r15, r15
    1562:	a7 01       	movw	r20, r14
    1564:	e7 01       	movw	r28, r14
    1566:	05 90       	lpm	r0, Z+
    1568:	08 94       	sec
    156a:	07 94       	ror	r0
    156c:	28 f4       	brcc	.+10     	; 0x1578 <__ftoa_engine+0x80>
    156e:	36 0f       	add	r19, r22
    1570:	e7 1e       	adc	r14, r23
    1572:	f8 1e       	adc	r15, r24
    1574:	49 1f       	adc	r20, r25
    1576:	51 1d       	adc	r21, r1
    1578:	66 0f       	add	r22, r22
    157a:	77 1f       	adc	r23, r23
    157c:	88 1f       	adc	r24, r24
    157e:	99 1f       	adc	r25, r25
    1580:	06 94       	lsr	r0
    1582:	a1 f7       	brne	.-24     	; 0x156c <__ftoa_engine+0x74>
    1584:	05 90       	lpm	r0, Z+
    1586:	07 94       	ror	r0
    1588:	28 f4       	brcc	.+10     	; 0x1594 <__ftoa_engine+0x9c>
    158a:	e7 0e       	add	r14, r23
    158c:	f8 1e       	adc	r15, r24
    158e:	49 1f       	adc	r20, r25
    1590:	56 1f       	adc	r21, r22
    1592:	c1 1d       	adc	r28, r1
    1594:	77 0f       	add	r23, r23
    1596:	88 1f       	adc	r24, r24
    1598:	99 1f       	adc	r25, r25
    159a:	66 1f       	adc	r22, r22
    159c:	06 94       	lsr	r0
    159e:	a1 f7       	brne	.-24     	; 0x1588 <__ftoa_engine+0x90>
    15a0:	05 90       	lpm	r0, Z+
    15a2:	07 94       	ror	r0
    15a4:	28 f4       	brcc	.+10     	; 0x15b0 <__ftoa_engine+0xb8>
    15a6:	f8 0e       	add	r15, r24
    15a8:	49 1f       	adc	r20, r25
    15aa:	56 1f       	adc	r21, r22
    15ac:	c7 1f       	adc	r28, r23
    15ae:	d1 1d       	adc	r29, r1
    15b0:	88 0f       	add	r24, r24
    15b2:	99 1f       	adc	r25, r25
    15b4:	66 1f       	adc	r22, r22
    15b6:	77 1f       	adc	r23, r23
    15b8:	06 94       	lsr	r0
    15ba:	a1 f7       	brne	.-24     	; 0x15a4 <__ftoa_engine+0xac>
    15bc:	05 90       	lpm	r0, Z+
    15be:	07 94       	ror	r0
    15c0:	20 f4       	brcc	.+8      	; 0x15ca <__ftoa_engine+0xd2>
    15c2:	49 0f       	add	r20, r25
    15c4:	56 1f       	adc	r21, r22
    15c6:	c7 1f       	adc	r28, r23
    15c8:	d8 1f       	adc	r29, r24
    15ca:	99 0f       	add	r25, r25
    15cc:	66 1f       	adc	r22, r22
    15ce:	77 1f       	adc	r23, r23
    15d0:	88 1f       	adc	r24, r24
    15d2:	06 94       	lsr	r0
    15d4:	a9 f7       	brne	.-22     	; 0x15c0 <__ftoa_engine+0xc8>
    15d6:	84 91       	lpm	r24, Z
    15d8:	10 95       	com	r17
    15da:	17 70       	andi	r17, 0x07	; 7
    15dc:	41 f0       	breq	.+16     	; 0x15ee <__ftoa_engine+0xf6>
    15de:	d6 95       	lsr	r29
    15e0:	c7 95       	ror	r28
    15e2:	57 95       	ror	r21
    15e4:	47 95       	ror	r20
    15e6:	f7 94       	ror	r15
    15e8:	e7 94       	ror	r14
    15ea:	1a 95       	dec	r17
    15ec:	c1 f7       	brne	.-16     	; 0x15de <__ftoa_engine+0xe6>
    15ee:	e4 ee       	ldi	r30, 0xE4	; 228
    15f0:	f0 e0       	ldi	r31, 0x00	; 0
    15f2:	68 94       	set
    15f4:	15 90       	lpm	r1, Z+
    15f6:	15 91       	lpm	r17, Z+
    15f8:	35 91       	lpm	r19, Z+
    15fa:	65 91       	lpm	r22, Z+
    15fc:	95 91       	lpm	r25, Z+
    15fe:	05 90       	lpm	r0, Z+
    1600:	7f e2       	ldi	r23, 0x2F	; 47
    1602:	73 95       	inc	r23
    1604:	e1 18       	sub	r14, r1
    1606:	f1 0a       	sbc	r15, r17
    1608:	43 0b       	sbc	r20, r19
    160a:	56 0b       	sbc	r21, r22
    160c:	c9 0b       	sbc	r28, r25
    160e:	d0 09       	sbc	r29, r0
    1610:	c0 f7       	brcc	.-16     	; 0x1602 <__ftoa_engine+0x10a>
    1612:	e1 0c       	add	r14, r1
    1614:	f1 1e       	adc	r15, r17
    1616:	43 1f       	adc	r20, r19
    1618:	56 1f       	adc	r21, r22
    161a:	c9 1f       	adc	r28, r25
    161c:	d0 1d       	adc	r29, r0
    161e:	7e f4       	brtc	.+30     	; 0x163e <__ftoa_engine+0x146>
    1620:	70 33       	cpi	r23, 0x30	; 48
    1622:	11 f4       	brne	.+4      	; 0x1628 <__ftoa_engine+0x130>
    1624:	8a 95       	dec	r24
    1626:	e6 cf       	rjmp	.-52     	; 0x15f4 <__ftoa_engine+0xfc>
    1628:	e8 94       	clt
    162a:	01 50       	subi	r16, 0x01	; 1
    162c:	30 f0       	brcs	.+12     	; 0x163a <__ftoa_engine+0x142>
    162e:	08 0f       	add	r16, r24
    1630:	0a f4       	brpl	.+2      	; 0x1634 <__ftoa_engine+0x13c>
    1632:	00 27       	eor	r16, r16
    1634:	02 17       	cp	r16, r18
    1636:	08 f4       	brcc	.+2      	; 0x163a <__ftoa_engine+0x142>
    1638:	20 2f       	mov	r18, r16
    163a:	23 95       	inc	r18
    163c:	02 2f       	mov	r16, r18
    163e:	7a 33       	cpi	r23, 0x3A	; 58
    1640:	28 f0       	brcs	.+10     	; 0x164c <__ftoa_engine+0x154>
    1642:	79 e3       	ldi	r23, 0x39	; 57
    1644:	7d 93       	st	X+, r23
    1646:	2a 95       	dec	r18
    1648:	e9 f7       	brne	.-6      	; 0x1644 <__ftoa_engine+0x14c>
    164a:	10 c0       	rjmp	.+32     	; 0x166c <__ftoa_engine+0x174>
    164c:	7d 93       	st	X+, r23
    164e:	2a 95       	dec	r18
    1650:	89 f6       	brne	.-94     	; 0x15f4 <__ftoa_engine+0xfc>
    1652:	06 94       	lsr	r0
    1654:	97 95       	ror	r25
    1656:	67 95       	ror	r22
    1658:	37 95       	ror	r19
    165a:	17 95       	ror	r17
    165c:	17 94       	ror	r1
    165e:	e1 18       	sub	r14, r1
    1660:	f1 0a       	sbc	r15, r17
    1662:	43 0b       	sbc	r20, r19
    1664:	56 0b       	sbc	r21, r22
    1666:	c9 0b       	sbc	r28, r25
    1668:	d0 09       	sbc	r29, r0
    166a:	98 f0       	brcs	.+38     	; 0x1692 <__ftoa_engine+0x19a>
    166c:	23 95       	inc	r18
    166e:	7e 91       	ld	r23, -X
    1670:	73 95       	inc	r23
    1672:	7a 33       	cpi	r23, 0x3A	; 58
    1674:	08 f0       	brcs	.+2      	; 0x1678 <__ftoa_engine+0x180>
    1676:	70 e3       	ldi	r23, 0x30	; 48
    1678:	7c 93       	st	X, r23
    167a:	20 13       	cpse	r18, r16
    167c:	b8 f7       	brcc	.-18     	; 0x166c <__ftoa_engine+0x174>
    167e:	7e 91       	ld	r23, -X
    1680:	70 61       	ori	r23, 0x10	; 16
    1682:	7d 93       	st	X+, r23
    1684:	30 f0       	brcs	.+12     	; 0x1692 <__ftoa_engine+0x19a>
    1686:	83 95       	inc	r24
    1688:	71 e3       	ldi	r23, 0x31	; 49
    168a:	7d 93       	st	X+, r23
    168c:	70 e3       	ldi	r23, 0x30	; 48
    168e:	2a 95       	dec	r18
    1690:	e1 f7       	brne	.-8      	; 0x168a <__ftoa_engine+0x192>
    1692:	11 24       	eor	r1, r1
    1694:	ef 90       	pop	r14
    1696:	ff 90       	pop	r15
    1698:	0f 91       	pop	r16
    169a:	1f 91       	pop	r17
    169c:	cf 91       	pop	r28
    169e:	df 91       	pop	r29
    16a0:	99 27       	eor	r25, r25
    16a2:	87 fd       	sbrc	r24, 7
    16a4:	90 95       	com	r25
    16a6:	08 95       	ret

000016a8 <strnlen_P>:
    16a8:	fc 01       	movw	r30, r24
    16aa:	05 90       	lpm	r0, Z+
    16ac:	61 50       	subi	r22, 0x01	; 1
    16ae:	70 40       	sbci	r23, 0x00	; 0
    16b0:	01 10       	cpse	r0, r1
    16b2:	d8 f7       	brcc	.-10     	; 0x16aa <strnlen_P+0x2>
    16b4:	80 95       	com	r24
    16b6:	90 95       	com	r25
    16b8:	8e 0f       	add	r24, r30
    16ba:	9f 1f       	adc	r25, r31
    16bc:	08 95       	ret

000016be <strnlen>:
    16be:	fc 01       	movw	r30, r24
    16c0:	61 50       	subi	r22, 0x01	; 1
    16c2:	70 40       	sbci	r23, 0x00	; 0
    16c4:	01 90       	ld	r0, Z+
    16c6:	01 10       	cpse	r0, r1
    16c8:	d8 f7       	brcc	.-10     	; 0x16c0 <strnlen+0x2>
    16ca:	80 95       	com	r24
    16cc:	90 95       	com	r25
    16ce:	8e 0f       	add	r24, r30
    16d0:	9f 1f       	adc	r25, r31
    16d2:	08 95       	ret

000016d4 <fputc>:
    16d4:	0f 93       	push	r16
    16d6:	1f 93       	push	r17
    16d8:	cf 93       	push	r28
    16da:	df 93       	push	r29
    16dc:	fb 01       	movw	r30, r22
    16de:	23 81       	ldd	r18, Z+3	; 0x03
    16e0:	21 fd       	sbrc	r18, 1
    16e2:	03 c0       	rjmp	.+6      	; 0x16ea <fputc+0x16>
    16e4:	8f ef       	ldi	r24, 0xFF	; 255
    16e6:	9f ef       	ldi	r25, 0xFF	; 255
    16e8:	28 c0       	rjmp	.+80     	; 0x173a <fputc+0x66>
    16ea:	22 ff       	sbrs	r18, 2
    16ec:	16 c0       	rjmp	.+44     	; 0x171a <fputc+0x46>
    16ee:	46 81       	ldd	r20, Z+6	; 0x06
    16f0:	57 81       	ldd	r21, Z+7	; 0x07
    16f2:	24 81       	ldd	r18, Z+4	; 0x04
    16f4:	35 81       	ldd	r19, Z+5	; 0x05
    16f6:	42 17       	cp	r20, r18
    16f8:	53 07       	cpc	r21, r19
    16fa:	44 f4       	brge	.+16     	; 0x170c <fputc+0x38>
    16fc:	a0 81       	ld	r26, Z
    16fe:	b1 81       	ldd	r27, Z+1	; 0x01
    1700:	9d 01       	movw	r18, r26
    1702:	2f 5f       	subi	r18, 0xFF	; 255
    1704:	3f 4f       	sbci	r19, 0xFF	; 255
    1706:	31 83       	std	Z+1, r19	; 0x01
    1708:	20 83       	st	Z, r18
    170a:	8c 93       	st	X, r24
    170c:	26 81       	ldd	r18, Z+6	; 0x06
    170e:	37 81       	ldd	r19, Z+7	; 0x07
    1710:	2f 5f       	subi	r18, 0xFF	; 255
    1712:	3f 4f       	sbci	r19, 0xFF	; 255
    1714:	37 83       	std	Z+7, r19	; 0x07
    1716:	26 83       	std	Z+6, r18	; 0x06
    1718:	10 c0       	rjmp	.+32     	; 0x173a <fputc+0x66>
    171a:	eb 01       	movw	r28, r22
    171c:	09 2f       	mov	r16, r25
    171e:	18 2f       	mov	r17, r24
    1720:	00 84       	ldd	r0, Z+8	; 0x08
    1722:	f1 85       	ldd	r31, Z+9	; 0x09
    1724:	e0 2d       	mov	r30, r0
    1726:	19 95       	eicall
    1728:	89 2b       	or	r24, r25
    172a:	e1 f6       	brne	.-72     	; 0x16e4 <fputc+0x10>
    172c:	8e 81       	ldd	r24, Y+6	; 0x06
    172e:	9f 81       	ldd	r25, Y+7	; 0x07
    1730:	01 96       	adiw	r24, 0x01	; 1
    1732:	9f 83       	std	Y+7, r25	; 0x07
    1734:	8e 83       	std	Y+6, r24	; 0x06
    1736:	81 2f       	mov	r24, r17
    1738:	90 2f       	mov	r25, r16
    173a:	df 91       	pop	r29
    173c:	cf 91       	pop	r28
    173e:	1f 91       	pop	r17
    1740:	0f 91       	pop	r16
    1742:	08 95       	ret

00001744 <__ultoa_invert>:
    1744:	fa 01       	movw	r30, r20
    1746:	aa 27       	eor	r26, r26
    1748:	28 30       	cpi	r18, 0x08	; 8
    174a:	51 f1       	breq	.+84     	; 0x17a0 <__ultoa_invert+0x5c>
    174c:	20 31       	cpi	r18, 0x10	; 16
    174e:	81 f1       	breq	.+96     	; 0x17b0 <__ultoa_invert+0x6c>
    1750:	e8 94       	clt
    1752:	6f 93       	push	r22
    1754:	6e 7f       	andi	r22, 0xFE	; 254
    1756:	6e 5f       	subi	r22, 0xFE	; 254
    1758:	7f 4f       	sbci	r23, 0xFF	; 255
    175a:	8f 4f       	sbci	r24, 0xFF	; 255
    175c:	9f 4f       	sbci	r25, 0xFF	; 255
    175e:	af 4f       	sbci	r26, 0xFF	; 255
    1760:	b1 e0       	ldi	r27, 0x01	; 1
    1762:	3e d0       	rcall	.+124    	; 0x17e0 <__ultoa_invert+0x9c>
    1764:	b4 e0       	ldi	r27, 0x04	; 4
    1766:	3c d0       	rcall	.+120    	; 0x17e0 <__ultoa_invert+0x9c>
    1768:	67 0f       	add	r22, r23
    176a:	78 1f       	adc	r23, r24
    176c:	89 1f       	adc	r24, r25
    176e:	9a 1f       	adc	r25, r26
    1770:	a1 1d       	adc	r26, r1
    1772:	68 0f       	add	r22, r24
    1774:	79 1f       	adc	r23, r25
    1776:	8a 1f       	adc	r24, r26
    1778:	91 1d       	adc	r25, r1
    177a:	a1 1d       	adc	r26, r1
    177c:	6a 0f       	add	r22, r26
    177e:	71 1d       	adc	r23, r1
    1780:	81 1d       	adc	r24, r1
    1782:	91 1d       	adc	r25, r1
    1784:	a1 1d       	adc	r26, r1
    1786:	20 d0       	rcall	.+64     	; 0x17c8 <__ultoa_invert+0x84>
    1788:	09 f4       	brne	.+2      	; 0x178c <__ultoa_invert+0x48>
    178a:	68 94       	set
    178c:	3f 91       	pop	r19
    178e:	2a e0       	ldi	r18, 0x0A	; 10
    1790:	26 9f       	mul	r18, r22
    1792:	11 24       	eor	r1, r1
    1794:	30 19       	sub	r19, r0
    1796:	30 5d       	subi	r19, 0xD0	; 208
    1798:	31 93       	st	Z+, r19
    179a:	de f6       	brtc	.-74     	; 0x1752 <__ultoa_invert+0xe>
    179c:	cf 01       	movw	r24, r30
    179e:	08 95       	ret
    17a0:	46 2f       	mov	r20, r22
    17a2:	47 70       	andi	r20, 0x07	; 7
    17a4:	40 5d       	subi	r20, 0xD0	; 208
    17a6:	41 93       	st	Z+, r20
    17a8:	b3 e0       	ldi	r27, 0x03	; 3
    17aa:	0f d0       	rcall	.+30     	; 0x17ca <__ultoa_invert+0x86>
    17ac:	c9 f7       	brne	.-14     	; 0x17a0 <__ultoa_invert+0x5c>
    17ae:	f6 cf       	rjmp	.-20     	; 0x179c <__ultoa_invert+0x58>
    17b0:	46 2f       	mov	r20, r22
    17b2:	4f 70       	andi	r20, 0x0F	; 15
    17b4:	40 5d       	subi	r20, 0xD0	; 208
    17b6:	4a 33       	cpi	r20, 0x3A	; 58
    17b8:	18 f0       	brcs	.+6      	; 0x17c0 <__ultoa_invert+0x7c>
    17ba:	49 5d       	subi	r20, 0xD9	; 217
    17bc:	31 fd       	sbrc	r19, 1
    17be:	40 52       	subi	r20, 0x20	; 32
    17c0:	41 93       	st	Z+, r20
    17c2:	02 d0       	rcall	.+4      	; 0x17c8 <__ultoa_invert+0x84>
    17c4:	a9 f7       	brne	.-22     	; 0x17b0 <__ultoa_invert+0x6c>
    17c6:	ea cf       	rjmp	.-44     	; 0x179c <__ultoa_invert+0x58>
    17c8:	b4 e0       	ldi	r27, 0x04	; 4
    17ca:	a6 95       	lsr	r26
    17cc:	97 95       	ror	r25
    17ce:	87 95       	ror	r24
    17d0:	77 95       	ror	r23
    17d2:	67 95       	ror	r22
    17d4:	ba 95       	dec	r27
    17d6:	c9 f7       	brne	.-14     	; 0x17ca <__ultoa_invert+0x86>
    17d8:	00 97       	sbiw	r24, 0x00	; 0
    17da:	61 05       	cpc	r22, r1
    17dc:	71 05       	cpc	r23, r1
    17de:	08 95       	ret
    17e0:	9b 01       	movw	r18, r22
    17e2:	ac 01       	movw	r20, r24
    17e4:	0a 2e       	mov	r0, r26
    17e6:	06 94       	lsr	r0
    17e8:	57 95       	ror	r21
    17ea:	47 95       	ror	r20
    17ec:	37 95       	ror	r19
    17ee:	27 95       	ror	r18
    17f0:	ba 95       	dec	r27
    17f2:	c9 f7       	brne	.-14     	; 0x17e6 <__ultoa_invert+0xa2>
    17f4:	62 0f       	add	r22, r18
    17f6:	73 1f       	adc	r23, r19
    17f8:	84 1f       	adc	r24, r20
    17fa:	95 1f       	adc	r25, r21
    17fc:	a0 1d       	adc	r26, r0
    17fe:	08 95       	ret

00001800 <_exit>:
    1800:	f8 94       	cli

00001802 <__stop_program>:
    1802:	ff cf       	rjmp	.-2      	; 0x1802 <__stop_program>
